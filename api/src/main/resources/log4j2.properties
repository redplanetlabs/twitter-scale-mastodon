# This is supposed to help the entire log4j system reset when reloading this file.
reset=true
status=warn

# All our loggers use this pattern.
property.tagged.logging.pattern=%d{HH:mm:ss.SSS} %-5p [%t] %.20c - %m%n%throwable

## Appenders setup

# Direct log messages to console
appender.console.name = console
appender.console.type = Console
appender.console.Target = SYSTEM_ERR
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = ${tagged.logging.pattern}
appender.console.immediateFlush=true

# Logging to a file
appender.file.name = file
appender.file.type = RollingFile
appender.file.fileName = ${sys:user.dir}/logs/logging.log
appender.file.filePattern = ${sys:user.dir}/logs/logging-%i.log
appender.file.layout.type = PatternLayout
appender.file.layout.pattern = ${tagged.logging.pattern}
appender.file.policies.type = Policies
appender.file.policies.size.type = SizeBasedTriggeringPolicy
appender.file.policies.size.size = 20MB
appender.file.strategy.type = DefaultRolloverStrategy

### deletion strategy
appender.file.strategy.action.type = Delete
appender.file.strategy.action.basepath = ${sys:user.dir}/logs
appender.file.strategy.action.maxDepth = 1
appender.file.strategy.action.condition.type = IfFileName
appender.file.strategy.action.condition.glob = logging*
appender.file.strategy.action.condition.ifAny.type = IfAny
appender.file.strategy.action.condition.ifAny.ifAccumulatedFileCount.type = IfAccumulatedFileCount
appender.file.strategy.action.condition.ifAny.ifAccumulatedFileCount.exceeds 50

rootLogger.level=ERROR
rootLogger.appenderRefs = console, file
rootLogger.appenderRef.console.ref = console
rootLogger.appenderRef.file.ref = file

logger.zk.name=org.apache.zookeeper
logger.zk.level=ERROR

logger.zk-pm.name=org.apache.zookeeper.server.util.JvmPauseMonitor
logger.zk-pm.level=INFO

logger.rama.name=rpl.rama
logger.rama.level=INFO

logger.rama-java.name=com.rpl.rama
logger.rama-java.level=INFO
