/**
 * Autogenerated by Thrift Compiler (0.17.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.rpl.mastodon.data;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
public class StatusQueryResults implements org.apache.thrift.TBase<StatusQueryResults, StatusQueryResults._Fields>, java.io.Serializable, Cloneable, Comparable<StatusQueryResults> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("StatusQueryResults");

  private static final org.apache.thrift.protocol.TField RESULTS_FIELD_DESC = new org.apache.thrift.protocol.TField("results", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField MENTIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("mentions", org.apache.thrift.protocol.TType.MAP, (short)2);
  private static final org.apache.thrift.protocol.TField REACHED_END_FIELD_DESC = new org.apache.thrift.protocol.TField("reachedEnd", org.apache.thrift.protocol.TType.BOOL, (short)3);
  private static final org.apache.thrift.protocol.TField REFRESHED_FIELD_DESC = new org.apache.thrift.protocol.TField("refreshed", org.apache.thrift.protocol.TType.BOOL, (short)4);
  private static final org.apache.thrift.protocol.TField LAST_STATUS_POINTER_FIELD_DESC = new org.apache.thrift.protocol.TField("lastStatusPointer", org.apache.thrift.protocol.TType.STRUCT, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new StatusQueryResultsStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new StatusQueryResultsTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.util.List<StatusResultWithId> results; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,AccountWithId> mentions; // required
  public boolean reachedEnd; // required
  public boolean refreshed; // required
  public @org.apache.thrift.annotation.Nullable StatusPointer lastStatusPointer; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    RESULTS((short)1, "results"),
    MENTIONS((short)2, "mentions"),
    REACHED_END((short)3, "reachedEnd"),
    REFRESHED((short)4, "refreshed"),
    LAST_STATUS_POINTER((short)5, "lastStatusPointer");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RESULTS
          return RESULTS;
        case 2: // MENTIONS
          return MENTIONS;
        case 3: // REACHED_END
          return REACHED_END;
        case 4: // REFRESHED
          return REFRESHED;
        case 5: // LAST_STATUS_POINTER
          return LAST_STATUS_POINTER;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __REACHEDEND_ISSET_ID = 0;
  private static final int __REFRESHED_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.LAST_STATUS_POINTER};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RESULTS, new org.apache.thrift.meta_data.FieldMetaData("results", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StatusResultWithId.class))));
    tmpMap.put(_Fields.MENTIONS, new org.apache.thrift.meta_data.FieldMetaData("mentions", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AccountWithId.class))));
    tmpMap.put(_Fields.REACHED_END, new org.apache.thrift.meta_data.FieldMetaData("reachedEnd", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.REFRESHED, new org.apache.thrift.meta_data.FieldMetaData("refreshed", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.LAST_STATUS_POINTER, new org.apache.thrift.meta_data.FieldMetaData("lastStatusPointer", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StatusPointer.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(StatusQueryResults.class, metaDataMap);
  }

  public StatusQueryResults() {
  }

  public StatusQueryResults(
    java.util.List<StatusResultWithId> results,
    java.util.Map<java.lang.String,AccountWithId> mentions,
    boolean reachedEnd,
    boolean refreshed)
  {
    this();
    this.results = results;
    this.mentions = mentions;
    this.reachedEnd = reachedEnd;
    setReachedEndIsSet(true);
    this.refreshed = refreshed;
    setRefreshedIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public StatusQueryResults(StatusQueryResults other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetResults()) {
      java.util.List<StatusResultWithId> __this__results = new java.util.ArrayList<StatusResultWithId>(other.results.size());
      for (StatusResultWithId other_element : other.results) {
        __this__results.add(new StatusResultWithId(other_element));
      }
      this.results = __this__results;
    }
    if (other.isSetMentions()) {
      java.util.Map<java.lang.String,AccountWithId> __this__mentions = new java.util.HashMap<java.lang.String,AccountWithId>(other.mentions.size());
      for (java.util.Map.Entry<java.lang.String, AccountWithId> other_element : other.mentions.entrySet()) {

        java.lang.String other_element_key = other_element.getKey();
        AccountWithId other_element_value = other_element.getValue();

        java.lang.String __this__mentions_copy_key = other_element_key;

        AccountWithId __this__mentions_copy_value = new AccountWithId(other_element_value);

        __this__mentions.put(__this__mentions_copy_key, __this__mentions_copy_value);
      }
      this.mentions = __this__mentions;
    }
    this.reachedEnd = other.reachedEnd;
    this.refreshed = other.refreshed;
    if (other.isSetLastStatusPointer()) {
      this.lastStatusPointer = new StatusPointer(other.lastStatusPointer);
    }
  }

  @Override
  public StatusQueryResults deepCopy() {
    return new StatusQueryResults(this);
  }

  @Override
  public void clear() {
    this.results = null;
    this.mentions = null;
    setReachedEndIsSet(false);
    this.reachedEnd = false;
    setRefreshedIsSet(false);
    this.refreshed = false;
    this.lastStatusPointer = null;
  }

  public int getResultsSize() {
    return (this.results == null) ? 0 : this.results.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<StatusResultWithId> getResultsIterator() {
    return (this.results == null) ? null : this.results.iterator();
  }

  public void addToResults(StatusResultWithId elem) {
    if (this.results == null) {
      this.results = new java.util.ArrayList<StatusResultWithId>();
    }
    this.results.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<StatusResultWithId> getResults() {
    return this.results;
  }

  public StatusQueryResults setResults(@org.apache.thrift.annotation.Nullable java.util.List<StatusResultWithId> results) {
    this.results = results;
    return this;
  }

  public void unsetResults() {
    this.results = null;
  }

  /** Returns true if field results is set (has been assigned a value) and false otherwise */
  public boolean isSetResults() {
    return this.results != null;
  }

  public void setResultsIsSet(boolean value) {
    if (!value) {
      this.results = null;
    }
  }

  public int getMentionsSize() {
    return (this.mentions == null) ? 0 : this.mentions.size();
  }

  public void putToMentions(java.lang.String key, AccountWithId val) {
    if (this.mentions == null) {
      this.mentions = new java.util.HashMap<java.lang.String,AccountWithId>();
    }
    this.mentions.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,AccountWithId> getMentions() {
    return this.mentions;
  }

  public StatusQueryResults setMentions(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,AccountWithId> mentions) {
    this.mentions = mentions;
    return this;
  }

  public void unsetMentions() {
    this.mentions = null;
  }

  /** Returns true if field mentions is set (has been assigned a value) and false otherwise */
  public boolean isSetMentions() {
    return this.mentions != null;
  }

  public void setMentionsIsSet(boolean value) {
    if (!value) {
      this.mentions = null;
    }
  }

  public boolean isReachedEnd() {
    return this.reachedEnd;
  }

  public StatusQueryResults setReachedEnd(boolean reachedEnd) {
    this.reachedEnd = reachedEnd;
    setReachedEndIsSet(true);
    return this;
  }

  public void unsetReachedEnd() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __REACHEDEND_ISSET_ID);
  }

  /** Returns true if field reachedEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetReachedEnd() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __REACHEDEND_ISSET_ID);
  }

  public void setReachedEndIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __REACHEDEND_ISSET_ID, value);
  }

  public boolean isRefreshed() {
    return this.refreshed;
  }

  public StatusQueryResults setRefreshed(boolean refreshed) {
    this.refreshed = refreshed;
    setRefreshedIsSet(true);
    return this;
  }

  public void unsetRefreshed() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __REFRESHED_ISSET_ID);
  }

  /** Returns true if field refreshed is set (has been assigned a value) and false otherwise */
  public boolean isSetRefreshed() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __REFRESHED_ISSET_ID);
  }

  public void setRefreshedIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __REFRESHED_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public StatusPointer getLastStatusPointer() {
    return this.lastStatusPointer;
  }

  public StatusQueryResults setLastStatusPointer(@org.apache.thrift.annotation.Nullable StatusPointer lastStatusPointer) {
    this.lastStatusPointer = lastStatusPointer;
    return this;
  }

  public void unsetLastStatusPointer() {
    this.lastStatusPointer = null;
  }

  /** Returns true if field lastStatusPointer is set (has been assigned a value) and false otherwise */
  public boolean isSetLastStatusPointer() {
    return this.lastStatusPointer != null;
  }

  public void setLastStatusPointerIsSet(boolean value) {
    if (!value) {
      this.lastStatusPointer = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case RESULTS:
      if (value == null) {
        unsetResults();
      } else {
        setResults((java.util.List<StatusResultWithId>)value);
      }
      break;

    case MENTIONS:
      if (value == null) {
        unsetMentions();
      } else {
        setMentions((java.util.Map<java.lang.String,AccountWithId>)value);
      }
      break;

    case REACHED_END:
      if (value == null) {
        unsetReachedEnd();
      } else {
        setReachedEnd((java.lang.Boolean)value);
      }
      break;

    case REFRESHED:
      if (value == null) {
        unsetRefreshed();
      } else {
        setRefreshed((java.lang.Boolean)value);
      }
      break;

    case LAST_STATUS_POINTER:
      if (value == null) {
        unsetLastStatusPointer();
      } else {
        setLastStatusPointer((StatusPointer)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case RESULTS:
      return getResults();

    case MENTIONS:
      return getMentions();

    case REACHED_END:
      return isReachedEnd();

    case REFRESHED:
      return isRefreshed();

    case LAST_STATUS_POINTER:
      return getLastStatusPointer();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case RESULTS:
      return isSetResults();
    case MENTIONS:
      return isSetMentions();
    case REACHED_END:
      return isSetReachedEnd();
    case REFRESHED:
      return isSetRefreshed();
    case LAST_STATUS_POINTER:
      return isSetLastStatusPointer();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof StatusQueryResults)
      return this.equals((StatusQueryResults)that);
    return false;
  }

  public boolean equals(StatusQueryResults that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_results = true && this.isSetResults();
    boolean that_present_results = true && that.isSetResults();
    if (this_present_results || that_present_results) {
      if (!(this_present_results && that_present_results))
        return false;
      if (!this.results.equals(that.results))
        return false;
    }

    boolean this_present_mentions = true && this.isSetMentions();
    boolean that_present_mentions = true && that.isSetMentions();
    if (this_present_mentions || that_present_mentions) {
      if (!(this_present_mentions && that_present_mentions))
        return false;
      if (!this.mentions.equals(that.mentions))
        return false;
    }

    boolean this_present_reachedEnd = true;
    boolean that_present_reachedEnd = true;
    if (this_present_reachedEnd || that_present_reachedEnd) {
      if (!(this_present_reachedEnd && that_present_reachedEnd))
        return false;
      if (this.reachedEnd != that.reachedEnd)
        return false;
    }

    boolean this_present_refreshed = true;
    boolean that_present_refreshed = true;
    if (this_present_refreshed || that_present_refreshed) {
      if (!(this_present_refreshed && that_present_refreshed))
        return false;
      if (this.refreshed != that.refreshed)
        return false;
    }

    boolean this_present_lastStatusPointer = true && this.isSetLastStatusPointer();
    boolean that_present_lastStatusPointer = true && that.isSetLastStatusPointer();
    if (this_present_lastStatusPointer || that_present_lastStatusPointer) {
      if (!(this_present_lastStatusPointer && that_present_lastStatusPointer))
        return false;
      if (!this.lastStatusPointer.equals(that.lastStatusPointer))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetResults()) ? 131071 : 524287);
    if (isSetResults())
      hashCode = hashCode * 8191 + results.hashCode();

    hashCode = hashCode * 8191 + ((isSetMentions()) ? 131071 : 524287);
    if (isSetMentions())
      hashCode = hashCode * 8191 + mentions.hashCode();

    hashCode = hashCode * 8191 + ((reachedEnd) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((refreshed) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetLastStatusPointer()) ? 131071 : 524287);
    if (isSetLastStatusPointer())
      hashCode = hashCode * 8191 + lastStatusPointer.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(StatusQueryResults other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetResults(), other.isSetResults());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResults()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.results, other.results);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetMentions(), other.isSetMentions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMentions()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mentions, other.mentions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetReachedEnd(), other.isSetReachedEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReachedEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reachedEnd, other.reachedEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetRefreshed(), other.isSetRefreshed());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefreshed()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refreshed, other.refreshed);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetLastStatusPointer(), other.isSetLastStatusPointer());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastStatusPointer()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastStatusPointer, other.lastStatusPointer);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("StatusQueryResults(");
    boolean first = true;

    sb.append("results:");
    if (this.results == null) {
      sb.append("null");
    } else {
      sb.append(this.results);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("mentions:");
    if (this.mentions == null) {
      sb.append("null");
    } else {
      sb.append(this.mentions);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("reachedEnd:");
    sb.append(this.reachedEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("refreshed:");
    sb.append(this.refreshed);
    first = false;
    if (isSetLastStatusPointer()) {
      if (!first) sb.append(", ");
      sb.append("lastStatusPointer:");
      if (this.lastStatusPointer == null) {
        sb.append("null");
      } else {
        sb.append(this.lastStatusPointer);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (results == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'results' was not present! Struct: " + toString());
    }
    if (mentions == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'mentions' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'reachedEnd' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'refreshed' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
    if (lastStatusPointer != null) {
      lastStatusPointer.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class StatusQueryResultsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public StatusQueryResultsStandardScheme getScheme() {
      return new StatusQueryResultsStandardScheme();
    }
  }

  private static class StatusQueryResultsStandardScheme extends org.apache.thrift.scheme.StandardScheme<StatusQueryResults> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, StatusQueryResults struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RESULTS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list146 = iprot.readListBegin();
                struct.results = new java.util.ArrayList<StatusResultWithId>(_list146.size);
                @org.apache.thrift.annotation.Nullable StatusResultWithId _elem147;
                for (int _i148 = 0; _i148 < _list146.size; ++_i148)
                {
                  _elem147 = new StatusResultWithId();
                  _elem147.read(iprot);
                  struct.results.add(_elem147);
                }
                iprot.readListEnd();
              }
              struct.setResultsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MENTIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map149 = iprot.readMapBegin();
                struct.mentions = new java.util.HashMap<java.lang.String,AccountWithId>(2*_map149.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key150;
                @org.apache.thrift.annotation.Nullable AccountWithId _val151;
                for (int _i152 = 0; _i152 < _map149.size; ++_i152)
                {
                  _key150 = iprot.readString();
                  _val151 = new AccountWithId();
                  _val151.read(iprot);
                  struct.mentions.put(_key150, _val151);
                }
                iprot.readMapEnd();
              }
              struct.setMentionsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // REACHED_END
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.reachedEnd = iprot.readBool();
              struct.setReachedEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // REFRESHED
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.refreshed = iprot.readBool();
              struct.setRefreshedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LAST_STATUS_POINTER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.lastStatusPointer = new StatusPointer();
              struct.lastStatusPointer.read(iprot);
              struct.setLastStatusPointerIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetReachedEnd()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'reachedEnd' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetRefreshed()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'refreshed' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, StatusQueryResults struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.results != null) {
        oprot.writeFieldBegin(RESULTS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.results.size()));
          for (StatusResultWithId _iter153 : struct.results)
          {
            _iter153.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.mentions != null) {
        oprot.writeFieldBegin(MENTIONS_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, struct.mentions.size()));
          for (java.util.Map.Entry<java.lang.String, AccountWithId> _iter154 : struct.mentions.entrySet())
          {
            oprot.writeString(_iter154.getKey());
            _iter154.getValue().write(oprot);
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REACHED_END_FIELD_DESC);
      oprot.writeBool(struct.reachedEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(REFRESHED_FIELD_DESC);
      oprot.writeBool(struct.refreshed);
      oprot.writeFieldEnd();
      if (struct.lastStatusPointer != null) {
        if (struct.isSetLastStatusPointer()) {
          oprot.writeFieldBegin(LAST_STATUS_POINTER_FIELD_DESC);
          struct.lastStatusPointer.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class StatusQueryResultsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public StatusQueryResultsTupleScheme getScheme() {
      return new StatusQueryResultsTupleScheme();
    }
  }

  private static class StatusQueryResultsTupleScheme extends org.apache.thrift.scheme.TupleScheme<StatusQueryResults> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, StatusQueryResults struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      {
        oprot.writeI32(struct.results.size());
        for (StatusResultWithId _iter155 : struct.results)
        {
          _iter155.write(oprot);
        }
      }
      {
        oprot.writeI32(struct.mentions.size());
        for (java.util.Map.Entry<java.lang.String, AccountWithId> _iter156 : struct.mentions.entrySet())
        {
          oprot.writeString(_iter156.getKey());
          _iter156.getValue().write(oprot);
        }
      }
      oprot.writeBool(struct.reachedEnd);
      oprot.writeBool(struct.refreshed);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetLastStatusPointer()) {
        optionals.set(0);
      }
      oprot.writeBitSet(optionals, 1);
      if (struct.isSetLastStatusPointer()) {
        struct.lastStatusPointer.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, StatusQueryResults struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      {
        org.apache.thrift.protocol.TList _list157 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
        struct.results = new java.util.ArrayList<StatusResultWithId>(_list157.size);
        @org.apache.thrift.annotation.Nullable StatusResultWithId _elem158;
        for (int _i159 = 0; _i159 < _list157.size; ++_i159)
        {
          _elem158 = new StatusResultWithId();
          _elem158.read(iprot);
          struct.results.add(_elem158);
        }
      }
      struct.setResultsIsSet(true);
      {
        org.apache.thrift.protocol.TMap _map160 = iprot.readMapBegin(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT); 
        struct.mentions = new java.util.HashMap<java.lang.String,AccountWithId>(2*_map160.size);
        @org.apache.thrift.annotation.Nullable java.lang.String _key161;
        @org.apache.thrift.annotation.Nullable AccountWithId _val162;
        for (int _i163 = 0; _i163 < _map160.size; ++_i163)
        {
          _key161 = iprot.readString();
          _val162 = new AccountWithId();
          _val162.read(iprot);
          struct.mentions.put(_key161, _val162);
        }
      }
      struct.setMentionsIsSet(true);
      struct.reachedEnd = iprot.readBool();
      struct.setReachedEndIsSet(true);
      struct.refreshed = iprot.readBool();
      struct.setRefreshedIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(1);
      if (incoming.get(0)) {
        struct.lastStatusPointer = new StatusPointer();
        struct.lastStatusPointer.read(iprot);
        struct.setLastStatusPointerIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

