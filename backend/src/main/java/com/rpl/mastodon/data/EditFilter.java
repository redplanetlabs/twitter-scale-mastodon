/**
 * Autogenerated by Thrift Compiler (0.17.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.rpl.mastodon.data;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
public class EditFilter implements org.apache.thrift.TBase<EditFilter, EditFilter._Fields>, java.io.Serializable, Cloneable, Comparable<EditFilter> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("EditFilter");

  private static final org.apache.thrift.protocol.TField FILTER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("filterId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("accountId", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("timestamp", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField KEYWORDS_FIELD_DESC = new org.apache.thrift.protocol.TField("keywords", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CONTEXT_FIELD_DESC = new org.apache.thrift.protocol.TField("context", org.apache.thrift.protocol.TType.SET, (short)6);
  private static final org.apache.thrift.protocol.TField ACTION_FIELD_DESC = new org.apache.thrift.protocol.TField("action", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField EXPIRATION_MILLIS_FIELD_DESC = new org.apache.thrift.protocol.TField("expirationMillis", org.apache.thrift.protocol.TType.I64, (short)8);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new EditFilterStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new EditFilterTupleSchemeFactory();

  public long filterId; // required
  public long accountId; // required
  public long timestamp; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<EditFilterKeyword> keywords; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String title; // optional
  public @org.apache.thrift.annotation.Nullable java.util.Set<FilterContext> context; // optional
  /**
   * 
   * @see FilterAction
   */
  public @org.apache.thrift.annotation.Nullable FilterAction action; // optional
  public long expirationMillis; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    FILTER_ID((short)1, "filterId"),
    ACCOUNT_ID((short)2, "accountId"),
    TIMESTAMP((short)3, "timestamp"),
    KEYWORDS((short)4, "keywords"),
    TITLE((short)5, "title"),
    CONTEXT((short)6, "context"),
    /**
     * 
     * @see FilterAction
     */
    ACTION((short)7, "action"),
    EXPIRATION_MILLIS((short)8, "expirationMillis");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // FILTER_ID
          return FILTER_ID;
        case 2: // ACCOUNT_ID
          return ACCOUNT_ID;
        case 3: // TIMESTAMP
          return TIMESTAMP;
        case 4: // KEYWORDS
          return KEYWORDS;
        case 5: // TITLE
          return TITLE;
        case 6: // CONTEXT
          return CONTEXT;
        case 7: // ACTION
          return ACTION;
        case 8: // EXPIRATION_MILLIS
          return EXPIRATION_MILLIS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __FILTERID_ISSET_ID = 0;
  private static final int __ACCOUNTID_ISSET_ID = 1;
  private static final int __TIMESTAMP_ISSET_ID = 2;
  private static final int __EXPIRATIONMILLIS_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.TITLE,_Fields.CONTEXT,_Fields.ACTION,_Fields.EXPIRATION_MILLIS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.FILTER_ID, new org.apache.thrift.meta_data.FieldMetaData("filterId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "FilterId")));
    tmpMap.put(_Fields.ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("accountId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "AccountId")));
    tmpMap.put(_Fields.TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("timestamp", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields.KEYWORDS, new org.apache.thrift.meta_data.FieldMetaData("keywords", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EditFilterKeyword.class))));
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTEXT, new org.apache.thrift.meta_data.FieldMetaData("context", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, FilterContext.class))));
    tmpMap.put(_Fields.ACTION, new org.apache.thrift.meta_data.FieldMetaData("action", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, FilterAction.class)));
    tmpMap.put(_Fields.EXPIRATION_MILLIS, new org.apache.thrift.meta_data.FieldMetaData("expirationMillis", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(EditFilter.class, metaDataMap);
  }

  public EditFilter() {
  }

  public EditFilter(
    long filterId,
    long accountId,
    long timestamp,
    java.util.List<EditFilterKeyword> keywords)
  {
    this();
    this.filterId = filterId;
    setFilterIdIsSet(true);
    this.accountId = accountId;
    setAccountIdIsSet(true);
    this.timestamp = timestamp;
    setTimestampIsSet(true);
    this.keywords = keywords;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public EditFilter(EditFilter other) {
    __isset_bitfield = other.__isset_bitfield;
    this.filterId = other.filterId;
    this.accountId = other.accountId;
    this.timestamp = other.timestamp;
    if (other.isSetKeywords()) {
      java.util.List<EditFilterKeyword> __this__keywords = new java.util.ArrayList<EditFilterKeyword>(other.keywords.size());
      for (EditFilterKeyword other_element : other.keywords) {
        __this__keywords.add(new EditFilterKeyword(other_element));
      }
      this.keywords = __this__keywords;
    }
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetContext()) {
      java.util.Set<FilterContext> __this__context = java.util.EnumSet.noneOf(FilterContext.class);
      for (FilterContext other_element : other.context) {
        __this__context.add(other_element);
      }
      this.context = __this__context;
    }
    if (other.isSetAction()) {
      this.action = other.action;
    }
    this.expirationMillis = other.expirationMillis;
  }

  @Override
  public EditFilter deepCopy() {
    return new EditFilter(this);
  }

  @Override
  public void clear() {
    setFilterIdIsSet(false);
    this.filterId = 0;
    setAccountIdIsSet(false);
    this.accountId = 0;
    setTimestampIsSet(false);
    this.timestamp = 0;
    this.keywords = null;
    this.title = null;
    this.context = null;
    this.action = null;
    setExpirationMillisIsSet(false);
    this.expirationMillis = 0;
  }

  public long getFilterId() {
    return this.filterId;
  }

  public EditFilter setFilterId(long filterId) {
    this.filterId = filterId;
    setFilterIdIsSet(true);
    return this;
  }

  public void unsetFilterId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FILTERID_ISSET_ID);
  }

  /** Returns true if field filterId is set (has been assigned a value) and false otherwise */
  public boolean isSetFilterId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FILTERID_ISSET_ID);
  }

  public void setFilterIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FILTERID_ISSET_ID, value);
  }

  public long getAccountId() {
    return this.accountId;
  }

  public EditFilter setAccountId(long accountId) {
    this.accountId = accountId;
    setAccountIdIsSet(true);
    return this;
  }

  public void unsetAccountId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
  }

  /** Returns true if field accountId is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
  }

  public void setAccountIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ACCOUNTID_ISSET_ID, value);
  }

  public long getTimestamp() {
    return this.timestamp;
  }

  public EditFilter setTimestamp(long timestamp) {
    this.timestamp = timestamp;
    setTimestampIsSet(true);
    return this;
  }

  public void unsetTimestamp() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TIMESTAMP_ISSET_ID);
  }

  /** Returns true if field timestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetTimestamp() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TIMESTAMP_ISSET_ID);
  }

  public void setTimestampIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TIMESTAMP_ISSET_ID, value);
  }

  public int getKeywordsSize() {
    return (this.keywords == null) ? 0 : this.keywords.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<EditFilterKeyword> getKeywordsIterator() {
    return (this.keywords == null) ? null : this.keywords.iterator();
  }

  public void addToKeywords(EditFilterKeyword elem) {
    if (this.keywords == null) {
      this.keywords = new java.util.ArrayList<EditFilterKeyword>();
    }
    this.keywords.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<EditFilterKeyword> getKeywords() {
    return this.keywords;
  }

  public EditFilter setKeywords(@org.apache.thrift.annotation.Nullable java.util.List<EditFilterKeyword> keywords) {
    this.keywords = keywords;
    return this;
  }

  public void unsetKeywords() {
    this.keywords = null;
  }

  /** Returns true if field keywords is set (has been assigned a value) and false otherwise */
  public boolean isSetKeywords() {
    return this.keywords != null;
  }

  public void setKeywordsIsSet(boolean value) {
    if (!value) {
      this.keywords = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getTitle() {
    return this.title;
  }

  public EditFilter setTitle(@org.apache.thrift.annotation.Nullable java.lang.String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public int getContextSize() {
    return (this.context == null) ? 0 : this.context.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<FilterContext> getContextIterator() {
    return (this.context == null) ? null : this.context.iterator();
  }

  public void addToContext(FilterContext elem) {
    if (this.context == null) {
      this.context = java.util.EnumSet.noneOf(FilterContext.class);
    }
    this.context.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Set<FilterContext> getContext() {
    return this.context;
  }

  public EditFilter setContext(@org.apache.thrift.annotation.Nullable java.util.Set<FilterContext> context) {
    this.context = context;
    return this;
  }

  public void unsetContext() {
    this.context = null;
  }

  /** Returns true if field context is set (has been assigned a value) and false otherwise */
  public boolean isSetContext() {
    return this.context != null;
  }

  public void setContextIsSet(boolean value) {
    if (!value) {
      this.context = null;
    }
  }

  /**
   * 
   * @see FilterAction
   */
  @org.apache.thrift.annotation.Nullable
  public FilterAction getAction() {
    return this.action;
  }

  /**
   * 
   * @see FilterAction
   */
  public EditFilter setAction(@org.apache.thrift.annotation.Nullable FilterAction action) {
    this.action = action;
    return this;
  }

  public void unsetAction() {
    this.action = null;
  }

  /** Returns true if field action is set (has been assigned a value) and false otherwise */
  public boolean isSetAction() {
    return this.action != null;
  }

  public void setActionIsSet(boolean value) {
    if (!value) {
      this.action = null;
    }
  }

  public long getExpirationMillis() {
    return this.expirationMillis;
  }

  public EditFilter setExpirationMillis(long expirationMillis) {
    this.expirationMillis = expirationMillis;
    setExpirationMillisIsSet(true);
    return this;
  }

  public void unsetExpirationMillis() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EXPIRATIONMILLIS_ISSET_ID);
  }

  /** Returns true if field expirationMillis is set (has been assigned a value) and false otherwise */
  public boolean isSetExpirationMillis() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EXPIRATIONMILLIS_ISSET_ID);
  }

  public void setExpirationMillisIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EXPIRATIONMILLIS_ISSET_ID, value);
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case FILTER_ID:
      if (value == null) {
        unsetFilterId();
      } else {
        setFilterId((java.lang.Long)value);
      }
      break;

    case ACCOUNT_ID:
      if (value == null) {
        unsetAccountId();
      } else {
        setAccountId((java.lang.Long)value);
      }
      break;

    case TIMESTAMP:
      if (value == null) {
        unsetTimestamp();
      } else {
        setTimestamp((java.lang.Long)value);
      }
      break;

    case KEYWORDS:
      if (value == null) {
        unsetKeywords();
      } else {
        setKeywords((java.util.List<EditFilterKeyword>)value);
      }
      break;

    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((java.lang.String)value);
      }
      break;

    case CONTEXT:
      if (value == null) {
        unsetContext();
      } else {
        setContext((java.util.Set<FilterContext>)value);
      }
      break;

    case ACTION:
      if (value == null) {
        unsetAction();
      } else {
        setAction((FilterAction)value);
      }
      break;

    case EXPIRATION_MILLIS:
      if (value == null) {
        unsetExpirationMillis();
      } else {
        setExpirationMillis((java.lang.Long)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case FILTER_ID:
      return getFilterId();

    case ACCOUNT_ID:
      return getAccountId();

    case TIMESTAMP:
      return getTimestamp();

    case KEYWORDS:
      return getKeywords();

    case TITLE:
      return getTitle();

    case CONTEXT:
      return getContext();

    case ACTION:
      return getAction();

    case EXPIRATION_MILLIS:
      return getExpirationMillis();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case FILTER_ID:
      return isSetFilterId();
    case ACCOUNT_ID:
      return isSetAccountId();
    case TIMESTAMP:
      return isSetTimestamp();
    case KEYWORDS:
      return isSetKeywords();
    case TITLE:
      return isSetTitle();
    case CONTEXT:
      return isSetContext();
    case ACTION:
      return isSetAction();
    case EXPIRATION_MILLIS:
      return isSetExpirationMillis();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof EditFilter)
      return this.equals((EditFilter)that);
    return false;
  }

  public boolean equals(EditFilter that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_filterId = true;
    boolean that_present_filterId = true;
    if (this_present_filterId || that_present_filterId) {
      if (!(this_present_filterId && that_present_filterId))
        return false;
      if (this.filterId != that.filterId)
        return false;
    }

    boolean this_present_accountId = true;
    boolean that_present_accountId = true;
    if (this_present_accountId || that_present_accountId) {
      if (!(this_present_accountId && that_present_accountId))
        return false;
      if (this.accountId != that.accountId)
        return false;
    }

    boolean this_present_timestamp = true;
    boolean that_present_timestamp = true;
    if (this_present_timestamp || that_present_timestamp) {
      if (!(this_present_timestamp && that_present_timestamp))
        return false;
      if (this.timestamp != that.timestamp)
        return false;
    }

    boolean this_present_keywords = true && this.isSetKeywords();
    boolean that_present_keywords = true && that.isSetKeywords();
    if (this_present_keywords || that_present_keywords) {
      if (!(this_present_keywords && that_present_keywords))
        return false;
      if (!this.keywords.equals(that.keywords))
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_context = true && this.isSetContext();
    boolean that_present_context = true && that.isSetContext();
    if (this_present_context || that_present_context) {
      if (!(this_present_context && that_present_context))
        return false;
      if (!this.context.equals(that.context))
        return false;
    }

    boolean this_present_action = true && this.isSetAction();
    boolean that_present_action = true && that.isSetAction();
    if (this_present_action || that_present_action) {
      if (!(this_present_action && that_present_action))
        return false;
      if (!this.action.equals(that.action))
        return false;
    }

    boolean this_present_expirationMillis = true && this.isSetExpirationMillis();
    boolean that_present_expirationMillis = true && that.isSetExpirationMillis();
    if (this_present_expirationMillis || that_present_expirationMillis) {
      if (!(this_present_expirationMillis && that_present_expirationMillis))
        return false;
      if (this.expirationMillis != that.expirationMillis)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(filterId);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(accountId);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(timestamp);

    hashCode = hashCode * 8191 + ((isSetKeywords()) ? 131071 : 524287);
    if (isSetKeywords())
      hashCode = hashCode * 8191 + keywords.hashCode();

    hashCode = hashCode * 8191 + ((isSetTitle()) ? 131071 : 524287);
    if (isSetTitle())
      hashCode = hashCode * 8191 + title.hashCode();

    hashCode = hashCode * 8191 + ((isSetContext()) ? 131071 : 524287);
    if (isSetContext())
      hashCode = hashCode * 8191 + context.hashCode();

    hashCode = hashCode * 8191 + ((isSetAction()) ? 131071 : 524287);
    if (isSetAction())
      hashCode = hashCode * 8191 + action.getValue();

    hashCode = hashCode * 8191 + ((isSetExpirationMillis()) ? 131071 : 524287);
    if (isSetExpirationMillis())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(expirationMillis);

    return hashCode;
  }

  @Override
  public int compareTo(EditFilter other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetFilterId(), other.isSetFilterId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFilterId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterId, other.filterId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetAccountId(), other.isSetAccountId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountId, other.accountId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetTimestamp(), other.isSetTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timestamp, other.timestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetKeywords(), other.isSetKeywords());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKeywords()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.keywords, other.keywords);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetTitle(), other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetContext(), other.isSetContext());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContext()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.context, other.context);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetAction(), other.isSetAction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.action, other.action);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetExpirationMillis(), other.isSetExpirationMillis());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpirationMillis()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expirationMillis, other.expirationMillis);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("EditFilter(");
    boolean first = true;

    sb.append("filterId:");
    sb.append(this.filterId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("accountId:");
    sb.append(this.accountId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("timestamp:");
    sb.append(this.timestamp);
    first = false;
    if (!first) sb.append(", ");
    sb.append("keywords:");
    if (this.keywords == null) {
      sb.append("null");
    } else {
      sb.append(this.keywords);
    }
    first = false;
    if (isSetTitle()) {
      if (!first) sb.append(", ");
      sb.append("title:");
      if (this.title == null) {
        sb.append("null");
      } else {
        sb.append(this.title);
      }
      first = false;
    }
    if (isSetContext()) {
      if (!first) sb.append(", ");
      sb.append("context:");
      if (this.context == null) {
        sb.append("null");
      } else {
        sb.append(this.context);
      }
      first = false;
    }
    if (isSetAction()) {
      if (!first) sb.append(", ");
      sb.append("action:");
      if (this.action == null) {
        sb.append("null");
      } else {
        sb.append(this.action);
      }
      first = false;
    }
    if (isSetExpirationMillis()) {
      if (!first) sb.append(", ");
      sb.append("expirationMillis:");
      sb.append(this.expirationMillis);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'filterId' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'accountId' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'timestamp' because it's a primitive and you chose the non-beans generator.
    if (keywords == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'keywords' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class EditFilterStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public EditFilterStandardScheme getScheme() {
      return new EditFilterStandardScheme();
    }
  }

  private static class EditFilterStandardScheme extends org.apache.thrift.scheme.StandardScheme<EditFilter> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, EditFilter struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // FILTER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.filterId = iprot.readI64();
              struct.setFilterIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.accountId = iprot.readI64();
              struct.setAccountIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.timestamp = iprot.readI64();
              struct.setTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // KEYWORDS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list214 = iprot.readListBegin();
                struct.keywords = new java.util.ArrayList<EditFilterKeyword>(_list214.size);
                @org.apache.thrift.annotation.Nullable EditFilterKeyword _elem215;
                for (int _i216 = 0; _i216 < _list214.size; ++_i216)
                {
                  _elem215 = new EditFilterKeyword();
                  _elem215.read(iprot);
                  struct.keywords.add(_elem215);
                }
                iprot.readListEnd();
              }
              struct.setKeywordsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CONTEXT
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set217 = iprot.readSetBegin();
                struct.context = java.util.EnumSet.noneOf(FilterContext.class);
                @org.apache.thrift.annotation.Nullable FilterContext _elem218;
                for (int _i219 = 0; _i219 < _set217.size; ++_i219)
                {
                  _elem218 = com.rpl.mastodon.data.FilterContext.findByValue(iprot.readI32());
                  if (_elem218 != null)
                  {
                    struct.context.add(_elem218);
                  }
                }
                iprot.readSetEnd();
              }
              struct.setContextIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ACTION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.action = com.rpl.mastodon.data.FilterAction.findByValue(iprot.readI32());
              struct.setActionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // EXPIRATION_MILLIS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.expirationMillis = iprot.readI64();
              struct.setExpirationMillisIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetFilterId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'filterId' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetAccountId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'accountId' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetTimestamp()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'timestamp' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, EditFilter struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(FILTER_ID_FIELD_DESC);
      oprot.writeI64(struct.filterId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ACCOUNT_ID_FIELD_DESC);
      oprot.writeI64(struct.accountId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TIMESTAMP_FIELD_DESC);
      oprot.writeI64(struct.timestamp);
      oprot.writeFieldEnd();
      if (struct.keywords != null) {
        oprot.writeFieldBegin(KEYWORDS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.keywords.size()));
          for (EditFilterKeyword _iter220 : struct.keywords)
          {
            _iter220.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.title != null) {
        if (struct.isSetTitle()) {
          oprot.writeFieldBegin(TITLE_FIELD_DESC);
          oprot.writeString(struct.title);
          oprot.writeFieldEnd();
        }
      }
      if (struct.context != null) {
        if (struct.isSetContext()) {
          oprot.writeFieldBegin(CONTEXT_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.context.size()));
            for (FilterContext _iter221 : struct.context)
            {
              oprot.writeI32(_iter221.getValue());
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.action != null) {
        if (struct.isSetAction()) {
          oprot.writeFieldBegin(ACTION_FIELD_DESC);
          oprot.writeI32(struct.action.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetExpirationMillis()) {
        oprot.writeFieldBegin(EXPIRATION_MILLIS_FIELD_DESC);
        oprot.writeI64(struct.expirationMillis);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class EditFilterTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public EditFilterTupleScheme getScheme() {
      return new EditFilterTupleScheme();
    }
  }

  private static class EditFilterTupleScheme extends org.apache.thrift.scheme.TupleScheme<EditFilter> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, EditFilter struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI64(struct.filterId);
      oprot.writeI64(struct.accountId);
      oprot.writeI64(struct.timestamp);
      {
        oprot.writeI32(struct.keywords.size());
        for (EditFilterKeyword _iter222 : struct.keywords)
        {
          _iter222.write(oprot);
        }
      }
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetTitle()) {
        optionals.set(0);
      }
      if (struct.isSetContext()) {
        optionals.set(1);
      }
      if (struct.isSetAction()) {
        optionals.set(2);
      }
      if (struct.isSetExpirationMillis()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetTitle()) {
        oprot.writeString(struct.title);
      }
      if (struct.isSetContext()) {
        {
          oprot.writeI32(struct.context.size());
          for (FilterContext _iter223 : struct.context)
          {
            oprot.writeI32(_iter223.getValue());
          }
        }
      }
      if (struct.isSetAction()) {
        oprot.writeI32(struct.action.getValue());
      }
      if (struct.isSetExpirationMillis()) {
        oprot.writeI64(struct.expirationMillis);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, EditFilter struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.filterId = iprot.readI64();
      struct.setFilterIdIsSet(true);
      struct.accountId = iprot.readI64();
      struct.setAccountIdIsSet(true);
      struct.timestamp = iprot.readI64();
      struct.setTimestampIsSet(true);
      {
        org.apache.thrift.protocol.TList _list224 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
        struct.keywords = new java.util.ArrayList<EditFilterKeyword>(_list224.size);
        @org.apache.thrift.annotation.Nullable EditFilterKeyword _elem225;
        for (int _i226 = 0; _i226 < _list224.size; ++_i226)
        {
          _elem225 = new EditFilterKeyword();
          _elem225.read(iprot);
          struct.keywords.add(_elem225);
        }
      }
      struct.setKeywordsIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TSet _set227 = iprot.readSetBegin(org.apache.thrift.protocol.TType.I32);
          struct.context = java.util.EnumSet.noneOf(FilterContext.class);
          @org.apache.thrift.annotation.Nullable FilterContext _elem228;
          for (int _i229 = 0; _i229 < _set227.size; ++_i229)
          {
            _elem228 = com.rpl.mastodon.data.FilterContext.findByValue(iprot.readI32());
            if (_elem228 != null)
            {
              struct.context.add(_elem228);
            }
          }
        }
        struct.setContextIsSet(true);
      }
      if (incoming.get(2)) {
        struct.action = com.rpl.mastodon.data.FilterAction.findByValue(iprot.readI32());
        struct.setActionIsSet(true);
      }
      if (incoming.get(3)) {
        struct.expirationMillis = iprot.readI64();
        struct.setExpirationMillisIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

