/**
 * Autogenerated by Thrift Compiler (0.17.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.rpl.mastodon.data;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
public class FollowAccount implements org.apache.thrift.TBase<FollowAccount, FollowAccount._Fields>, java.io.Serializable, Cloneable, Comparable<FollowAccount> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FollowAccount");

  private static final org.apache.thrift.protocol.TField ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("accountId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField TARGET_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("targetId", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("timestamp", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField SHOW_BOOSTS_FIELD_DESC = new org.apache.thrift.protocol.TField("showBoosts", org.apache.thrift.protocol.TType.BOOL, (short)4);
  private static final org.apache.thrift.protocol.TField NOTIFY_FIELD_DESC = new org.apache.thrift.protocol.TField("notify", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField LANGUAGES_FIELD_DESC = new org.apache.thrift.protocol.TField("languages", org.apache.thrift.protocol.TType.LIST, (short)6);
  private static final org.apache.thrift.protocol.TField FOLLOWER_SHARED_INBOX_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("followerSharedInboxUrl", org.apache.thrift.protocol.TType.STRING, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new FollowAccountStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new FollowAccountTupleSchemeFactory();

  public long accountId; // required
  public long targetId; // required
  public long timestamp; // required
  public boolean showBoosts; // optional
  public boolean notify; // optional
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> languages; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String followerSharedInboxUrl; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ACCOUNT_ID((short)1, "accountId"),
    TARGET_ID((short)2, "targetId"),
    TIMESTAMP((short)3, "timestamp"),
    SHOW_BOOSTS((short)4, "showBoosts"),
    NOTIFY((short)5, "notify"),
    LANGUAGES((short)6, "languages"),
    FOLLOWER_SHARED_INBOX_URL((short)7, "followerSharedInboxUrl");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ACCOUNT_ID
          return ACCOUNT_ID;
        case 2: // TARGET_ID
          return TARGET_ID;
        case 3: // TIMESTAMP
          return TIMESTAMP;
        case 4: // SHOW_BOOSTS
          return SHOW_BOOSTS;
        case 5: // NOTIFY
          return NOTIFY;
        case 6: // LANGUAGES
          return LANGUAGES;
        case 7: // FOLLOWER_SHARED_INBOX_URL
          return FOLLOWER_SHARED_INBOX_URL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ACCOUNTID_ISSET_ID = 0;
  private static final int __TARGETID_ISSET_ID = 1;
  private static final int __TIMESTAMP_ISSET_ID = 2;
  private static final int __SHOWBOOSTS_ISSET_ID = 3;
  private static final int __NOTIFY_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.SHOW_BOOSTS,_Fields.NOTIFY,_Fields.LANGUAGES,_Fields.FOLLOWER_SHARED_INBOX_URL};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("accountId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "AccountId")));
    tmpMap.put(_Fields.TARGET_ID, new org.apache.thrift.meta_data.FieldMetaData("targetId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "AccountId")));
    tmpMap.put(_Fields.TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("timestamp", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields.SHOW_BOOSTS, new org.apache.thrift.meta_data.FieldMetaData("showBoosts", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.NOTIFY, new org.apache.thrift.meta_data.FieldMetaData("notify", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.LANGUAGES, new org.apache.thrift.meta_data.FieldMetaData("languages", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.FOLLOWER_SHARED_INBOX_URL, new org.apache.thrift.meta_data.FieldMetaData("followerSharedInboxUrl", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FollowAccount.class, metaDataMap);
  }

  public FollowAccount() {
  }

  public FollowAccount(
    long accountId,
    long targetId,
    long timestamp)
  {
    this();
    this.accountId = accountId;
    setAccountIdIsSet(true);
    this.targetId = targetId;
    setTargetIdIsSet(true);
    this.timestamp = timestamp;
    setTimestampIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FollowAccount(FollowAccount other) {
    __isset_bitfield = other.__isset_bitfield;
    this.accountId = other.accountId;
    this.targetId = other.targetId;
    this.timestamp = other.timestamp;
    this.showBoosts = other.showBoosts;
    this.notify = other.notify;
    if (other.isSetLanguages()) {
      java.util.List<java.lang.String> __this__languages = new java.util.ArrayList<java.lang.String>(other.languages);
      this.languages = __this__languages;
    }
    if (other.isSetFollowerSharedInboxUrl()) {
      this.followerSharedInboxUrl = other.followerSharedInboxUrl;
    }
  }

  @Override
  public FollowAccount deepCopy() {
    return new FollowAccount(this);
  }

  @Override
  public void clear() {
    setAccountIdIsSet(false);
    this.accountId = 0;
    setTargetIdIsSet(false);
    this.targetId = 0;
    setTimestampIsSet(false);
    this.timestamp = 0;
    setShowBoostsIsSet(false);
    this.showBoosts = false;
    setNotifyIsSet(false);
    this.notify = false;
    this.languages = null;
    this.followerSharedInboxUrl = null;
  }

  public long getAccountId() {
    return this.accountId;
  }

  public FollowAccount setAccountId(long accountId) {
    this.accountId = accountId;
    setAccountIdIsSet(true);
    return this;
  }

  public void unsetAccountId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
  }

  /** Returns true if field accountId is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
  }

  public void setAccountIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ACCOUNTID_ISSET_ID, value);
  }

  public long getTargetId() {
    return this.targetId;
  }

  public FollowAccount setTargetId(long targetId) {
    this.targetId = targetId;
    setTargetIdIsSet(true);
    return this;
  }

  public void unsetTargetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TARGETID_ISSET_ID);
  }

  /** Returns true if field targetId is set (has been assigned a value) and false otherwise */
  public boolean isSetTargetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TARGETID_ISSET_ID);
  }

  public void setTargetIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TARGETID_ISSET_ID, value);
  }

  public long getTimestamp() {
    return this.timestamp;
  }

  public FollowAccount setTimestamp(long timestamp) {
    this.timestamp = timestamp;
    setTimestampIsSet(true);
    return this;
  }

  public void unsetTimestamp() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TIMESTAMP_ISSET_ID);
  }

  /** Returns true if field timestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetTimestamp() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TIMESTAMP_ISSET_ID);
  }

  public void setTimestampIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TIMESTAMP_ISSET_ID, value);
  }

  public boolean isShowBoosts() {
    return this.showBoosts;
  }

  public FollowAccount setShowBoosts(boolean showBoosts) {
    this.showBoosts = showBoosts;
    setShowBoostsIsSet(true);
    return this;
  }

  public void unsetShowBoosts() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SHOWBOOSTS_ISSET_ID);
  }

  /** Returns true if field showBoosts is set (has been assigned a value) and false otherwise */
  public boolean isSetShowBoosts() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SHOWBOOSTS_ISSET_ID);
  }

  public void setShowBoostsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SHOWBOOSTS_ISSET_ID, value);
  }

  public boolean isNotify() {
    return this.notify;
  }

  public FollowAccount setNotify(boolean notify) {
    this.notify = notify;
    setNotifyIsSet(true);
    return this;
  }

  public void unsetNotify() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NOTIFY_ISSET_ID);
  }

  /** Returns true if field notify is set (has been assigned a value) and false otherwise */
  public boolean isSetNotify() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NOTIFY_ISSET_ID);
  }

  public void setNotifyIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NOTIFY_ISSET_ID, value);
  }

  public int getLanguagesSize() {
    return (this.languages == null) ? 0 : this.languages.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.String> getLanguagesIterator() {
    return (this.languages == null) ? null : this.languages.iterator();
  }

  public void addToLanguages(java.lang.String elem) {
    if (this.languages == null) {
      this.languages = new java.util.ArrayList<java.lang.String>();
    }
    this.languages.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.String> getLanguages() {
    return this.languages;
  }

  public FollowAccount setLanguages(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> languages) {
    this.languages = languages;
    return this;
  }

  public void unsetLanguages() {
    this.languages = null;
  }

  /** Returns true if field languages is set (has been assigned a value) and false otherwise */
  public boolean isSetLanguages() {
    return this.languages != null;
  }

  public void setLanguagesIsSet(boolean value) {
    if (!value) {
      this.languages = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getFollowerSharedInboxUrl() {
    return this.followerSharedInboxUrl;
  }

  public FollowAccount setFollowerSharedInboxUrl(@org.apache.thrift.annotation.Nullable java.lang.String followerSharedInboxUrl) {
    this.followerSharedInboxUrl = followerSharedInboxUrl;
    return this;
  }

  public void unsetFollowerSharedInboxUrl() {
    this.followerSharedInboxUrl = null;
  }

  /** Returns true if field followerSharedInboxUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetFollowerSharedInboxUrl() {
    return this.followerSharedInboxUrl != null;
  }

  public void setFollowerSharedInboxUrlIsSet(boolean value) {
    if (!value) {
      this.followerSharedInboxUrl = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case ACCOUNT_ID:
      if (value == null) {
        unsetAccountId();
      } else {
        setAccountId((java.lang.Long)value);
      }
      break;

    case TARGET_ID:
      if (value == null) {
        unsetTargetId();
      } else {
        setTargetId((java.lang.Long)value);
      }
      break;

    case TIMESTAMP:
      if (value == null) {
        unsetTimestamp();
      } else {
        setTimestamp((java.lang.Long)value);
      }
      break;

    case SHOW_BOOSTS:
      if (value == null) {
        unsetShowBoosts();
      } else {
        setShowBoosts((java.lang.Boolean)value);
      }
      break;

    case NOTIFY:
      if (value == null) {
        unsetNotify();
      } else {
        setNotify((java.lang.Boolean)value);
      }
      break;

    case LANGUAGES:
      if (value == null) {
        unsetLanguages();
      } else {
        setLanguages((java.util.List<java.lang.String>)value);
      }
      break;

    case FOLLOWER_SHARED_INBOX_URL:
      if (value == null) {
        unsetFollowerSharedInboxUrl();
      } else {
        setFollowerSharedInboxUrl((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ACCOUNT_ID:
      return getAccountId();

    case TARGET_ID:
      return getTargetId();

    case TIMESTAMP:
      return getTimestamp();

    case SHOW_BOOSTS:
      return isShowBoosts();

    case NOTIFY:
      return isNotify();

    case LANGUAGES:
      return getLanguages();

    case FOLLOWER_SHARED_INBOX_URL:
      return getFollowerSharedInboxUrl();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ACCOUNT_ID:
      return isSetAccountId();
    case TARGET_ID:
      return isSetTargetId();
    case TIMESTAMP:
      return isSetTimestamp();
    case SHOW_BOOSTS:
      return isSetShowBoosts();
    case NOTIFY:
      return isSetNotify();
    case LANGUAGES:
      return isSetLanguages();
    case FOLLOWER_SHARED_INBOX_URL:
      return isSetFollowerSharedInboxUrl();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof FollowAccount)
      return this.equals((FollowAccount)that);
    return false;
  }

  public boolean equals(FollowAccount that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_accountId = true;
    boolean that_present_accountId = true;
    if (this_present_accountId || that_present_accountId) {
      if (!(this_present_accountId && that_present_accountId))
        return false;
      if (this.accountId != that.accountId)
        return false;
    }

    boolean this_present_targetId = true;
    boolean that_present_targetId = true;
    if (this_present_targetId || that_present_targetId) {
      if (!(this_present_targetId && that_present_targetId))
        return false;
      if (this.targetId != that.targetId)
        return false;
    }

    boolean this_present_timestamp = true;
    boolean that_present_timestamp = true;
    if (this_present_timestamp || that_present_timestamp) {
      if (!(this_present_timestamp && that_present_timestamp))
        return false;
      if (this.timestamp != that.timestamp)
        return false;
    }

    boolean this_present_showBoosts = true && this.isSetShowBoosts();
    boolean that_present_showBoosts = true && that.isSetShowBoosts();
    if (this_present_showBoosts || that_present_showBoosts) {
      if (!(this_present_showBoosts && that_present_showBoosts))
        return false;
      if (this.showBoosts != that.showBoosts)
        return false;
    }

    boolean this_present_notify = true && this.isSetNotify();
    boolean that_present_notify = true && that.isSetNotify();
    if (this_present_notify || that_present_notify) {
      if (!(this_present_notify && that_present_notify))
        return false;
      if (this.notify != that.notify)
        return false;
    }

    boolean this_present_languages = true && this.isSetLanguages();
    boolean that_present_languages = true && that.isSetLanguages();
    if (this_present_languages || that_present_languages) {
      if (!(this_present_languages && that_present_languages))
        return false;
      if (!this.languages.equals(that.languages))
        return false;
    }

    boolean this_present_followerSharedInboxUrl = true && this.isSetFollowerSharedInboxUrl();
    boolean that_present_followerSharedInboxUrl = true && that.isSetFollowerSharedInboxUrl();
    if (this_present_followerSharedInboxUrl || that_present_followerSharedInboxUrl) {
      if (!(this_present_followerSharedInboxUrl && that_present_followerSharedInboxUrl))
        return false;
      if (!this.followerSharedInboxUrl.equals(that.followerSharedInboxUrl))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(accountId);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(targetId);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(timestamp);

    hashCode = hashCode * 8191 + ((isSetShowBoosts()) ? 131071 : 524287);
    if (isSetShowBoosts())
      hashCode = hashCode * 8191 + ((showBoosts) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetNotify()) ? 131071 : 524287);
    if (isSetNotify())
      hashCode = hashCode * 8191 + ((notify) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetLanguages()) ? 131071 : 524287);
    if (isSetLanguages())
      hashCode = hashCode * 8191 + languages.hashCode();

    hashCode = hashCode * 8191 + ((isSetFollowerSharedInboxUrl()) ? 131071 : 524287);
    if (isSetFollowerSharedInboxUrl())
      hashCode = hashCode * 8191 + followerSharedInboxUrl.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(FollowAccount other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetAccountId(), other.isSetAccountId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountId, other.accountId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetTargetId(), other.isSetTargetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTargetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.targetId, other.targetId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetTimestamp(), other.isSetTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timestamp, other.timestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetShowBoosts(), other.isSetShowBoosts());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShowBoosts()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.showBoosts, other.showBoosts);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNotify(), other.isSetNotify());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotify()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notify, other.notify);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetLanguages(), other.isSetLanguages());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLanguages()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.languages, other.languages);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetFollowerSharedInboxUrl(), other.isSetFollowerSharedInboxUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFollowerSharedInboxUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.followerSharedInboxUrl, other.followerSharedInboxUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("FollowAccount(");
    boolean first = true;

    sb.append("accountId:");
    sb.append(this.accountId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("targetId:");
    sb.append(this.targetId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("timestamp:");
    sb.append(this.timestamp);
    first = false;
    if (isSetShowBoosts()) {
      if (!first) sb.append(", ");
      sb.append("showBoosts:");
      sb.append(this.showBoosts);
      first = false;
    }
    if (isSetNotify()) {
      if (!first) sb.append(", ");
      sb.append("notify:");
      sb.append(this.notify);
      first = false;
    }
    if (isSetLanguages()) {
      if (!first) sb.append(", ");
      sb.append("languages:");
      if (this.languages == null) {
        sb.append("null");
      } else {
        sb.append(this.languages);
      }
      first = false;
    }
    if (isSetFollowerSharedInboxUrl()) {
      if (!first) sb.append(", ");
      sb.append("followerSharedInboxUrl:");
      if (this.followerSharedInboxUrl == null) {
        sb.append("null");
      } else {
        sb.append(this.followerSharedInboxUrl);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'accountId' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'targetId' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'timestamp' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FollowAccountStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public FollowAccountStandardScheme getScheme() {
      return new FollowAccountStandardScheme();
    }
  }

  private static class FollowAccountStandardScheme extends org.apache.thrift.scheme.StandardScheme<FollowAccount> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, FollowAccount struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.accountId = iprot.readI64();
              struct.setAccountIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TARGET_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.targetId = iprot.readI64();
              struct.setTargetIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.timestamp = iprot.readI64();
              struct.setTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SHOW_BOOSTS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.showBoosts = iprot.readBool();
              struct.setShowBoostsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // NOTIFY
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.notify = iprot.readBool();
              struct.setNotifyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // LANGUAGES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list80 = iprot.readListBegin();
                struct.languages = new java.util.ArrayList<java.lang.String>(_list80.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _elem81;
                for (int _i82 = 0; _i82 < _list80.size; ++_i82)
                {
                  _elem81 = iprot.readString();
                  struct.languages.add(_elem81);
                }
                iprot.readListEnd();
              }
              struct.setLanguagesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // FOLLOWER_SHARED_INBOX_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.followerSharedInboxUrl = iprot.readString();
              struct.setFollowerSharedInboxUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetAccountId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'accountId' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetTargetId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'targetId' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetTimestamp()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'timestamp' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, FollowAccount struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ACCOUNT_ID_FIELD_DESC);
      oprot.writeI64(struct.accountId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TARGET_ID_FIELD_DESC);
      oprot.writeI64(struct.targetId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TIMESTAMP_FIELD_DESC);
      oprot.writeI64(struct.timestamp);
      oprot.writeFieldEnd();
      if (struct.isSetShowBoosts()) {
        oprot.writeFieldBegin(SHOW_BOOSTS_FIELD_DESC);
        oprot.writeBool(struct.showBoosts);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNotify()) {
        oprot.writeFieldBegin(NOTIFY_FIELD_DESC);
        oprot.writeBool(struct.notify);
        oprot.writeFieldEnd();
      }
      if (struct.languages != null) {
        if (struct.isSetLanguages()) {
          oprot.writeFieldBegin(LANGUAGES_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.languages.size()));
            for (java.lang.String _iter83 : struct.languages)
            {
              oprot.writeString(_iter83);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.followerSharedInboxUrl != null) {
        if (struct.isSetFollowerSharedInboxUrl()) {
          oprot.writeFieldBegin(FOLLOWER_SHARED_INBOX_URL_FIELD_DESC);
          oprot.writeString(struct.followerSharedInboxUrl);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FollowAccountTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public FollowAccountTupleScheme getScheme() {
      return new FollowAccountTupleScheme();
    }
  }

  private static class FollowAccountTupleScheme extends org.apache.thrift.scheme.TupleScheme<FollowAccount> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FollowAccount struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI64(struct.accountId);
      oprot.writeI64(struct.targetId);
      oprot.writeI64(struct.timestamp);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetShowBoosts()) {
        optionals.set(0);
      }
      if (struct.isSetNotify()) {
        optionals.set(1);
      }
      if (struct.isSetLanguages()) {
        optionals.set(2);
      }
      if (struct.isSetFollowerSharedInboxUrl()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetShowBoosts()) {
        oprot.writeBool(struct.showBoosts);
      }
      if (struct.isSetNotify()) {
        oprot.writeBool(struct.notify);
      }
      if (struct.isSetLanguages()) {
        {
          oprot.writeI32(struct.languages.size());
          for (java.lang.String _iter84 : struct.languages)
          {
            oprot.writeString(_iter84);
          }
        }
      }
      if (struct.isSetFollowerSharedInboxUrl()) {
        oprot.writeString(struct.followerSharedInboxUrl);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FollowAccount struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.accountId = iprot.readI64();
      struct.setAccountIdIsSet(true);
      struct.targetId = iprot.readI64();
      struct.setTargetIdIsSet(true);
      struct.timestamp = iprot.readI64();
      struct.setTimestampIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.showBoosts = iprot.readBool();
        struct.setShowBoostsIsSet(true);
      }
      if (incoming.get(1)) {
        struct.notify = iprot.readBool();
        struct.setNotifyIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list85 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRING);
          struct.languages = new java.util.ArrayList<java.lang.String>(_list85.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _elem86;
          for (int _i87 = 0; _i87 < _list85.size; ++_i87)
          {
            _elem86 = iprot.readString();
            struct.languages.add(_elem86);
          }
        }
        struct.setLanguagesIsSet(true);
      }
      if (incoming.get(3)) {
        struct.followerSharedInboxUrl = iprot.readString();
        struct.setFollowerSharedInboxUrlIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

