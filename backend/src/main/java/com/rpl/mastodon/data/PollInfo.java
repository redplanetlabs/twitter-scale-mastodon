/**
 * Autogenerated by Thrift Compiler (0.17.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.rpl.mastodon.data;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
public class PollInfo implements org.apache.thrift.TBase<PollInfo, PollInfo._Fields>, java.io.Serializable, Cloneable, Comparable<PollInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PollInfo");

  private static final org.apache.thrift.protocol.TField TOTAL_VOTERS_FIELD_DESC = new org.apache.thrift.protocol.TField("totalVoters", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField OWN_VOTES_FIELD_DESC = new org.apache.thrift.protocol.TField("ownVotes", org.apache.thrift.protocol.TType.SET, (short)2);
  private static final org.apache.thrift.protocol.TField VOTE_COUNTS_FIELD_DESC = new org.apache.thrift.protocol.TField("voteCounts", org.apache.thrift.protocol.TType.MAP, (short)3);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new PollInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new PollInfoTupleSchemeFactory();

  public int totalVoters; // required
  public @org.apache.thrift.annotation.Nullable java.util.Set<java.lang.Integer> ownVotes; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Integer,java.lang.Integer> voteCounts; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TOTAL_VOTERS((short)1, "totalVoters"),
    OWN_VOTES((short)2, "ownVotes"),
    VOTE_COUNTS((short)3, "voteCounts");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TOTAL_VOTERS
          return TOTAL_VOTERS;
        case 2: // OWN_VOTES
          return OWN_VOTES;
        case 3: // VOTE_COUNTS
          return VOTE_COUNTS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TOTALVOTERS_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TOTAL_VOTERS, new org.apache.thrift.meta_data.FieldMetaData("totalVoters", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.OWN_VOTES, new org.apache.thrift.meta_data.FieldMetaData("ownVotes", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.VOTE_COUNTS, new org.apache.thrift.meta_data.FieldMetaData("voteCounts", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PollInfo.class, metaDataMap);
  }

  public PollInfo() {
  }

  public PollInfo(
    int totalVoters,
    java.util.Set<java.lang.Integer> ownVotes,
    java.util.Map<java.lang.Integer,java.lang.Integer> voteCounts)
  {
    this();
    this.totalVoters = totalVoters;
    setTotalVotersIsSet(true);
    this.ownVotes = ownVotes;
    this.voteCounts = voteCounts;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PollInfo(PollInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.totalVoters = other.totalVoters;
    if (other.isSetOwnVotes()) {
      java.util.Set<java.lang.Integer> __this__ownVotes = new java.util.HashSet<java.lang.Integer>(other.ownVotes);
      this.ownVotes = __this__ownVotes;
    }
    if (other.isSetVoteCounts()) {
      java.util.Map<java.lang.Integer,java.lang.Integer> __this__voteCounts = new java.util.HashMap<java.lang.Integer,java.lang.Integer>(other.voteCounts);
      this.voteCounts = __this__voteCounts;
    }
  }

  @Override
  public PollInfo deepCopy() {
    return new PollInfo(this);
  }

  @Override
  public void clear() {
    setTotalVotersIsSet(false);
    this.totalVoters = 0;
    this.ownVotes = null;
    this.voteCounts = null;
  }

  public int getTotalVoters() {
    return this.totalVoters;
  }

  public PollInfo setTotalVoters(int totalVoters) {
    this.totalVoters = totalVoters;
    setTotalVotersIsSet(true);
    return this;
  }

  public void unsetTotalVoters() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TOTALVOTERS_ISSET_ID);
  }

  /** Returns true if field totalVoters is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalVoters() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TOTALVOTERS_ISSET_ID);
  }

  public void setTotalVotersIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TOTALVOTERS_ISSET_ID, value);
  }

  public int getOwnVotesSize() {
    return (this.ownVotes == null) ? 0 : this.ownVotes.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.Integer> getOwnVotesIterator() {
    return (this.ownVotes == null) ? null : this.ownVotes.iterator();
  }

  public void addToOwnVotes(int elem) {
    if (this.ownVotes == null) {
      this.ownVotes = new java.util.HashSet<java.lang.Integer>();
    }
    this.ownVotes.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Set<java.lang.Integer> getOwnVotes() {
    return this.ownVotes;
  }

  public PollInfo setOwnVotes(@org.apache.thrift.annotation.Nullable java.util.Set<java.lang.Integer> ownVotes) {
    this.ownVotes = ownVotes;
    return this;
  }

  public void unsetOwnVotes() {
    this.ownVotes = null;
  }

  /** Returns true if field ownVotes is set (has been assigned a value) and false otherwise */
  public boolean isSetOwnVotes() {
    return this.ownVotes != null;
  }

  public void setOwnVotesIsSet(boolean value) {
    if (!value) {
      this.ownVotes = null;
    }
  }

  public int getVoteCountsSize() {
    return (this.voteCounts == null) ? 0 : this.voteCounts.size();
  }

  public void putToVoteCounts(int key, int val) {
    if (this.voteCounts == null) {
      this.voteCounts = new java.util.HashMap<java.lang.Integer,java.lang.Integer>();
    }
    this.voteCounts.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.Integer,java.lang.Integer> getVoteCounts() {
    return this.voteCounts;
  }

  public PollInfo setVoteCounts(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Integer,java.lang.Integer> voteCounts) {
    this.voteCounts = voteCounts;
    return this;
  }

  public void unsetVoteCounts() {
    this.voteCounts = null;
  }

  /** Returns true if field voteCounts is set (has been assigned a value) and false otherwise */
  public boolean isSetVoteCounts() {
    return this.voteCounts != null;
  }

  public void setVoteCountsIsSet(boolean value) {
    if (!value) {
      this.voteCounts = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case TOTAL_VOTERS:
      if (value == null) {
        unsetTotalVoters();
      } else {
        setTotalVoters((java.lang.Integer)value);
      }
      break;

    case OWN_VOTES:
      if (value == null) {
        unsetOwnVotes();
      } else {
        setOwnVotes((java.util.Set<java.lang.Integer>)value);
      }
      break;

    case VOTE_COUNTS:
      if (value == null) {
        unsetVoteCounts();
      } else {
        setVoteCounts((java.util.Map<java.lang.Integer,java.lang.Integer>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case TOTAL_VOTERS:
      return getTotalVoters();

    case OWN_VOTES:
      return getOwnVotes();

    case VOTE_COUNTS:
      return getVoteCounts();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case TOTAL_VOTERS:
      return isSetTotalVoters();
    case OWN_VOTES:
      return isSetOwnVotes();
    case VOTE_COUNTS:
      return isSetVoteCounts();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof PollInfo)
      return this.equals((PollInfo)that);
    return false;
  }

  public boolean equals(PollInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_totalVoters = true;
    boolean that_present_totalVoters = true;
    if (this_present_totalVoters || that_present_totalVoters) {
      if (!(this_present_totalVoters && that_present_totalVoters))
        return false;
      if (this.totalVoters != that.totalVoters)
        return false;
    }

    boolean this_present_ownVotes = true && this.isSetOwnVotes();
    boolean that_present_ownVotes = true && that.isSetOwnVotes();
    if (this_present_ownVotes || that_present_ownVotes) {
      if (!(this_present_ownVotes && that_present_ownVotes))
        return false;
      if (!this.ownVotes.equals(that.ownVotes))
        return false;
    }

    boolean this_present_voteCounts = true && this.isSetVoteCounts();
    boolean that_present_voteCounts = true && that.isSetVoteCounts();
    if (this_present_voteCounts || that_present_voteCounts) {
      if (!(this_present_voteCounts && that_present_voteCounts))
        return false;
      if (!this.voteCounts.equals(that.voteCounts))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + totalVoters;

    hashCode = hashCode * 8191 + ((isSetOwnVotes()) ? 131071 : 524287);
    if (isSetOwnVotes())
      hashCode = hashCode * 8191 + ownVotes.hashCode();

    hashCode = hashCode * 8191 + ((isSetVoteCounts()) ? 131071 : 524287);
    if (isSetVoteCounts())
      hashCode = hashCode * 8191 + voteCounts.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(PollInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetTotalVoters(), other.isSetTotalVoters());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalVoters()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalVoters, other.totalVoters);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetOwnVotes(), other.isSetOwnVotes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOwnVotes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ownVotes, other.ownVotes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetVoteCounts(), other.isSetVoteCounts());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVoteCounts()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.voteCounts, other.voteCounts);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("PollInfo(");
    boolean first = true;

    sb.append("totalVoters:");
    sb.append(this.totalVoters);
    first = false;
    if (!first) sb.append(", ");
    sb.append("ownVotes:");
    if (this.ownVotes == null) {
      sb.append("null");
    } else {
      sb.append(this.ownVotes);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("voteCounts:");
    if (this.voteCounts == null) {
      sb.append("null");
    } else {
      sb.append(this.voteCounts);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'totalVoters' because it's a primitive and you chose the non-beans generator.
    if (ownVotes == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'ownVotes' was not present! Struct: " + toString());
    }
    if (voteCounts == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'voteCounts' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PollInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public PollInfoStandardScheme getScheme() {
      return new PollInfoStandardScheme();
    }
  }

  private static class PollInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<PollInfo> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, PollInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TOTAL_VOTERS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.totalVoters = iprot.readI32();
              struct.setTotalVotersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // OWN_VOTES
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set120 = iprot.readSetBegin();
                struct.ownVotes = new java.util.HashSet<java.lang.Integer>(2*_set120.size);
                int _elem121;
                for (int _i122 = 0; _i122 < _set120.size; ++_i122)
                {
                  _elem121 = iprot.readI32();
                  struct.ownVotes.add(_elem121);
                }
                iprot.readSetEnd();
              }
              struct.setOwnVotesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // VOTE_COUNTS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map123 = iprot.readMapBegin();
                struct.voteCounts = new java.util.HashMap<java.lang.Integer,java.lang.Integer>(2*_map123.size);
                int _key124;
                int _val125;
                for (int _i126 = 0; _i126 < _map123.size; ++_i126)
                {
                  _key124 = iprot.readI32();
                  _val125 = iprot.readI32();
                  struct.voteCounts.put(_key124, _val125);
                }
                iprot.readMapEnd();
              }
              struct.setVoteCountsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetTotalVoters()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'totalVoters' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, PollInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(TOTAL_VOTERS_FIELD_DESC);
      oprot.writeI32(struct.totalVoters);
      oprot.writeFieldEnd();
      if (struct.ownVotes != null) {
        oprot.writeFieldBegin(OWN_VOTES_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.ownVotes.size()));
          for (int _iter127 : struct.ownVotes)
          {
            oprot.writeI32(_iter127);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.voteCounts != null) {
        oprot.writeFieldBegin(VOTE_COUNTS_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.I32, struct.voteCounts.size()));
          for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> _iter128 : struct.voteCounts.entrySet())
          {
            oprot.writeI32(_iter128.getKey());
            oprot.writeI32(_iter128.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PollInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public PollInfoTupleScheme getScheme() {
      return new PollInfoTupleScheme();
    }
  }

  private static class PollInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<PollInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PollInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI32(struct.totalVoters);
      {
        oprot.writeI32(struct.ownVotes.size());
        for (int _iter129 : struct.ownVotes)
        {
          oprot.writeI32(_iter129);
        }
      }
      {
        oprot.writeI32(struct.voteCounts.size());
        for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> _iter130 : struct.voteCounts.entrySet())
        {
          oprot.writeI32(_iter130.getKey());
          oprot.writeI32(_iter130.getValue());
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PollInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.totalVoters = iprot.readI32();
      struct.setTotalVotersIsSet(true);
      {
        org.apache.thrift.protocol.TSet _set131 = iprot.readSetBegin(org.apache.thrift.protocol.TType.I32);
        struct.ownVotes = new java.util.HashSet<java.lang.Integer>(2*_set131.size);
        int _elem132;
        for (int _i133 = 0; _i133 < _set131.size; ++_i133)
        {
          _elem132 = iprot.readI32();
          struct.ownVotes.add(_elem132);
        }
      }
      struct.setOwnVotesIsSet(true);
      {
        org.apache.thrift.protocol.TMap _map134 = iprot.readMapBegin(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.I32); 
        struct.voteCounts = new java.util.HashMap<java.lang.Integer,java.lang.Integer>(2*_map134.size);
        int _key135;
        int _val136;
        for (int _i137 = 0; _i137 < _map134.size; ++_i137)
        {
          _key135 = iprot.readI32();
          _val136 = iprot.readI32();
          struct.voteCounts.put(_key135, _val136);
        }
      }
      struct.setVoteCountsIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

