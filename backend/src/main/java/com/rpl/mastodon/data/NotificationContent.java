/**
 * Autogenerated by Thrift Compiler (0.17.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.rpl.mastodon.data;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
public class NotificationContent extends org.apache.thrift.TUnion<NotificationContent, NotificationContent._Fields> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("NotificationContent");
  private static final org.apache.thrift.protocol.TField MENTION_FIELD_DESC = new org.apache.thrift.protocol.TField("mention", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField FOLLOW_FIELD_DESC = new org.apache.thrift.protocol.TField("follow", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField FOLLOW_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("followRequest", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField FAVORITE_FIELD_DESC = new org.apache.thrift.protocol.TField("favorite", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField BOOST_FIELD_DESC = new org.apache.thrift.protocol.TField("boost", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField POLL_COMPLETE_FIELD_DESC = new org.apache.thrift.protocol.TField("pollComplete", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField BOOSTED_UPDATE_FIELD_DESC = new org.apache.thrift.protocol.TField("boostedUpdate", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField FOLLOWEE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("followeeStatus", org.apache.thrift.protocol.TType.STRUCT, (short)8);

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    MENTION((short)1, "mention"),
    FOLLOW((short)2, "follow"),
    FOLLOW_REQUEST((short)3, "followRequest"),
    FAVORITE((short)4, "favorite"),
    BOOST((short)5, "boost"),
    POLL_COMPLETE((short)6, "pollComplete"),
    BOOSTED_UPDATE((short)7, "boostedUpdate"),
    FOLLOWEE_STATUS((short)8, "followeeStatus");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MENTION
          return MENTION;
        case 2: // FOLLOW
          return FOLLOW;
        case 3: // FOLLOW_REQUEST
          return FOLLOW_REQUEST;
        case 4: // FAVORITE
          return FAVORITE;
        case 5: // BOOST
          return BOOST;
        case 6: // POLL_COMPLETE
          return POLL_COMPLETE;
        case 7: // BOOSTED_UPDATE
          return BOOSTED_UPDATE;
        case 8: // FOLLOWEE_STATUS
          return FOLLOWEE_STATUS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MENTION, new org.apache.thrift.meta_data.FieldMetaData("mention", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StatusPointer.class)));
    tmpMap.put(_Fields.FOLLOW, new org.apache.thrift.meta_data.FieldMetaData("follow", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "AccountId")));
    tmpMap.put(_Fields.FOLLOW_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("followRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "AccountId")));
    tmpMap.put(_Fields.FAVORITE, new org.apache.thrift.meta_data.FieldMetaData("favorite", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StatusResponseNotificationContent.class)));
    tmpMap.put(_Fields.BOOST, new org.apache.thrift.meta_data.FieldMetaData("boost", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StatusResponseNotificationContent.class)));
    tmpMap.put(_Fields.POLL_COMPLETE, new org.apache.thrift.meta_data.FieldMetaData("pollComplete", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StatusPointer.class)));
    tmpMap.put(_Fields.BOOSTED_UPDATE, new org.apache.thrift.meta_data.FieldMetaData("boostedUpdate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StatusPointer.class)));
    tmpMap.put(_Fields.FOLLOWEE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("followeeStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StatusPointer.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(NotificationContent.class, metaDataMap);
  }

  public NotificationContent() {
    super();
  }

  public NotificationContent(_Fields setField, java.lang.Object value) {
    super(setField, value);
  }

  public NotificationContent(NotificationContent other) {
    super(other);
  }
  @Override
  public NotificationContent deepCopy() {
    return new NotificationContent(this);
  }

  public static NotificationContent mention(StatusPointer value) {
    NotificationContent x = new NotificationContent();
    x.setMention(value);
    return x;
  }

  public static NotificationContent follow(long value) {
    NotificationContent x = new NotificationContent();
    x.setFollow(value);
    return x;
  }

  public static NotificationContent followRequest(long value) {
    NotificationContent x = new NotificationContent();
    x.setFollowRequest(value);
    return x;
  }

  public static NotificationContent favorite(StatusResponseNotificationContent value) {
    NotificationContent x = new NotificationContent();
    x.setFavorite(value);
    return x;
  }

  public static NotificationContent boost(StatusResponseNotificationContent value) {
    NotificationContent x = new NotificationContent();
    x.setBoost(value);
    return x;
  }

  public static NotificationContent pollComplete(StatusPointer value) {
    NotificationContent x = new NotificationContent();
    x.setPollComplete(value);
    return x;
  }

  public static NotificationContent boostedUpdate(StatusPointer value) {
    NotificationContent x = new NotificationContent();
    x.setBoostedUpdate(value);
    return x;
  }

  public static NotificationContent followeeStatus(StatusPointer value) {
    NotificationContent x = new NotificationContent();
    x.setFolloweeStatus(value);
    return x;
  }


  @Override
  protected void checkType(_Fields setField, java.lang.Object value) throws java.lang.ClassCastException {
    switch (setField) {
      case MENTION:
        if (value instanceof StatusPointer) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type StatusPointer for field 'mention', but got " + value.getClass().getSimpleName());
      case FOLLOW:
        if (value instanceof java.lang.Long) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type java.lang.Long for field 'follow', but got " + value.getClass().getSimpleName());
      case FOLLOW_REQUEST:
        if (value instanceof java.lang.Long) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type java.lang.Long for field 'followRequest', but got " + value.getClass().getSimpleName());
      case FAVORITE:
        if (value instanceof StatusResponseNotificationContent) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type StatusResponseNotificationContent for field 'favorite', but got " + value.getClass().getSimpleName());
      case BOOST:
        if (value instanceof StatusResponseNotificationContent) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type StatusResponseNotificationContent for field 'boost', but got " + value.getClass().getSimpleName());
      case POLL_COMPLETE:
        if (value instanceof StatusPointer) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type StatusPointer for field 'pollComplete', but got " + value.getClass().getSimpleName());
      case BOOSTED_UPDATE:
        if (value instanceof StatusPointer) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type StatusPointer for field 'boostedUpdate', but got " + value.getClass().getSimpleName());
      case FOLLOWEE_STATUS:
        if (value instanceof StatusPointer) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type StatusPointer for field 'followeeStatus', but got " + value.getClass().getSimpleName());
      default:
        throw new java.lang.IllegalArgumentException("Unknown field id " + setField);
    }
  }

  @Override
  protected java.lang.Object standardSchemeReadValue(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TField field) throws org.apache.thrift.TException {
    _Fields setField = _Fields.findByThriftId(field.id);
    if (setField != null) {
      switch (setField) {
        case MENTION:
          if (field.type == MENTION_FIELD_DESC.type) {
            StatusPointer mention;
            mention = new StatusPointer();
            mention.read(iprot);
            return mention;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case FOLLOW:
          if (field.type == FOLLOW_FIELD_DESC.type) {
            java.lang.Long follow;
            follow = iprot.readI64();
            return follow;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case FOLLOW_REQUEST:
          if (field.type == FOLLOW_REQUEST_FIELD_DESC.type) {
            java.lang.Long followRequest;
            followRequest = iprot.readI64();
            return followRequest;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case FAVORITE:
          if (field.type == FAVORITE_FIELD_DESC.type) {
            StatusResponseNotificationContent favorite;
            favorite = new StatusResponseNotificationContent();
            favorite.read(iprot);
            return favorite;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case BOOST:
          if (field.type == BOOST_FIELD_DESC.type) {
            StatusResponseNotificationContent boost;
            boost = new StatusResponseNotificationContent();
            boost.read(iprot);
            return boost;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case POLL_COMPLETE:
          if (field.type == POLL_COMPLETE_FIELD_DESC.type) {
            StatusPointer pollComplete;
            pollComplete = new StatusPointer();
            pollComplete.read(iprot);
            return pollComplete;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case BOOSTED_UPDATE:
          if (field.type == BOOSTED_UPDATE_FIELD_DESC.type) {
            StatusPointer boostedUpdate;
            boostedUpdate = new StatusPointer();
            boostedUpdate.read(iprot);
            return boostedUpdate;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case FOLLOWEE_STATUS:
          if (field.type == FOLLOWEE_STATUS_FIELD_DESC.type) {
            StatusPointer followeeStatus;
            followeeStatus = new StatusPointer();
            followeeStatus.read(iprot);
            return followeeStatus;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        default:
          throw new java.lang.IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
      }
    } else {
      org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
      return null;
    }
  }

  @Override
  protected void standardSchemeWriteValue(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    switch (setField_) {
      case MENTION:
        StatusPointer mention = (StatusPointer)value_;
        mention.write(oprot);
        return;
      case FOLLOW:
        java.lang.Long follow = (java.lang.Long)value_;
        oprot.writeI64(follow);
        return;
      case FOLLOW_REQUEST:
        java.lang.Long followRequest = (java.lang.Long)value_;
        oprot.writeI64(followRequest);
        return;
      case FAVORITE:
        StatusResponseNotificationContent favorite = (StatusResponseNotificationContent)value_;
        favorite.write(oprot);
        return;
      case BOOST:
        StatusResponseNotificationContent boost = (StatusResponseNotificationContent)value_;
        boost.write(oprot);
        return;
      case POLL_COMPLETE:
        StatusPointer pollComplete = (StatusPointer)value_;
        pollComplete.write(oprot);
        return;
      case BOOSTED_UPDATE:
        StatusPointer boostedUpdate = (StatusPointer)value_;
        boostedUpdate.write(oprot);
        return;
      case FOLLOWEE_STATUS:
        StatusPointer followeeStatus = (StatusPointer)value_;
        followeeStatus.write(oprot);
        return;
      default:
        throw new java.lang.IllegalStateException("Cannot write union with unknown field " + setField_);
    }
  }

  @Override
  protected java.lang.Object tupleSchemeReadValue(org.apache.thrift.protocol.TProtocol iprot, short fieldID) throws org.apache.thrift.TException {
    _Fields setField = _Fields.findByThriftId(fieldID);
    if (setField != null) {
      switch (setField) {
        case MENTION:
          StatusPointer mention;
          mention = new StatusPointer();
          mention.read(iprot);
          return mention;
        case FOLLOW:
          java.lang.Long follow;
          follow = iprot.readI64();
          return follow;
        case FOLLOW_REQUEST:
          java.lang.Long followRequest;
          followRequest = iprot.readI64();
          return followRequest;
        case FAVORITE:
          StatusResponseNotificationContent favorite;
          favorite = new StatusResponseNotificationContent();
          favorite.read(iprot);
          return favorite;
        case BOOST:
          StatusResponseNotificationContent boost;
          boost = new StatusResponseNotificationContent();
          boost.read(iprot);
          return boost;
        case POLL_COMPLETE:
          StatusPointer pollComplete;
          pollComplete = new StatusPointer();
          pollComplete.read(iprot);
          return pollComplete;
        case BOOSTED_UPDATE:
          StatusPointer boostedUpdate;
          boostedUpdate = new StatusPointer();
          boostedUpdate.read(iprot);
          return boostedUpdate;
        case FOLLOWEE_STATUS:
          StatusPointer followeeStatus;
          followeeStatus = new StatusPointer();
          followeeStatus.read(iprot);
          return followeeStatus;
        default:
          throw new java.lang.IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
      }
    } else {
      throw new org.apache.thrift.protocol.TProtocolException("Couldn't find a field with field id " + fieldID);
    }
  }

  @Override
  protected void tupleSchemeWriteValue(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    switch (setField_) {
      case MENTION:
        StatusPointer mention = (StatusPointer)value_;
        mention.write(oprot);
        return;
      case FOLLOW:
        java.lang.Long follow = (java.lang.Long)value_;
        oprot.writeI64(follow);
        return;
      case FOLLOW_REQUEST:
        java.lang.Long followRequest = (java.lang.Long)value_;
        oprot.writeI64(followRequest);
        return;
      case FAVORITE:
        StatusResponseNotificationContent favorite = (StatusResponseNotificationContent)value_;
        favorite.write(oprot);
        return;
      case BOOST:
        StatusResponseNotificationContent boost = (StatusResponseNotificationContent)value_;
        boost.write(oprot);
        return;
      case POLL_COMPLETE:
        StatusPointer pollComplete = (StatusPointer)value_;
        pollComplete.write(oprot);
        return;
      case BOOSTED_UPDATE:
        StatusPointer boostedUpdate = (StatusPointer)value_;
        boostedUpdate.write(oprot);
        return;
      case FOLLOWEE_STATUS:
        StatusPointer followeeStatus = (StatusPointer)value_;
        followeeStatus.write(oprot);
        return;
      default:
        throw new java.lang.IllegalStateException("Cannot write union with unknown field " + setField_);
    }
  }

  @Override
  protected org.apache.thrift.protocol.TField getFieldDesc(_Fields setField) {
    switch (setField) {
      case MENTION:
        return MENTION_FIELD_DESC;
      case FOLLOW:
        return FOLLOW_FIELD_DESC;
      case FOLLOW_REQUEST:
        return FOLLOW_REQUEST_FIELD_DESC;
      case FAVORITE:
        return FAVORITE_FIELD_DESC;
      case BOOST:
        return BOOST_FIELD_DESC;
      case POLL_COMPLETE:
        return POLL_COMPLETE_FIELD_DESC;
      case BOOSTED_UPDATE:
        return BOOSTED_UPDATE_FIELD_DESC;
      case FOLLOWEE_STATUS:
        return FOLLOWEE_STATUS_FIELD_DESC;
      default:
        throw new java.lang.IllegalArgumentException("Unknown field id " + setField);
    }
  }

  @Override
  protected org.apache.thrift.protocol.TStruct getStructDesc() {
    return STRUCT_DESC;
  }

  @Override
  protected _Fields enumForId(short id) {
    return _Fields.findByThriftIdOrThrow(id);
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }


  public StatusPointer getMention() {
    if (getSetField() == _Fields.MENTION) {
      return (StatusPointer)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'mention' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setMention(StatusPointer value) {
    setField_ = _Fields.MENTION;
    value_ = java.util.Objects.requireNonNull(value,"_Fields.MENTION");
  }

  public long getFollow() {
    if (getSetField() == _Fields.FOLLOW) {
      return (java.lang.Long)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'follow' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setFollow(long value) {
    setField_ = _Fields.FOLLOW;
    value_ = value;
  }

  public long getFollowRequest() {
    if (getSetField() == _Fields.FOLLOW_REQUEST) {
      return (java.lang.Long)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'followRequest' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setFollowRequest(long value) {
    setField_ = _Fields.FOLLOW_REQUEST;
    value_ = value;
  }

  public StatusResponseNotificationContent getFavorite() {
    if (getSetField() == _Fields.FAVORITE) {
      return (StatusResponseNotificationContent)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'favorite' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setFavorite(StatusResponseNotificationContent value) {
    setField_ = _Fields.FAVORITE;
    value_ = java.util.Objects.requireNonNull(value,"_Fields.FAVORITE");
  }

  public StatusResponseNotificationContent getBoost() {
    if (getSetField() == _Fields.BOOST) {
      return (StatusResponseNotificationContent)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'boost' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setBoost(StatusResponseNotificationContent value) {
    setField_ = _Fields.BOOST;
    value_ = java.util.Objects.requireNonNull(value,"_Fields.BOOST");
  }

  public StatusPointer getPollComplete() {
    if (getSetField() == _Fields.POLL_COMPLETE) {
      return (StatusPointer)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'pollComplete' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setPollComplete(StatusPointer value) {
    setField_ = _Fields.POLL_COMPLETE;
    value_ = java.util.Objects.requireNonNull(value,"_Fields.POLL_COMPLETE");
  }

  public StatusPointer getBoostedUpdate() {
    if (getSetField() == _Fields.BOOSTED_UPDATE) {
      return (StatusPointer)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'boostedUpdate' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setBoostedUpdate(StatusPointer value) {
    setField_ = _Fields.BOOSTED_UPDATE;
    value_ = java.util.Objects.requireNonNull(value,"_Fields.BOOSTED_UPDATE");
  }

  public StatusPointer getFolloweeStatus() {
    if (getSetField() == _Fields.FOLLOWEE_STATUS) {
      return (StatusPointer)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'followeeStatus' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setFolloweeStatus(StatusPointer value) {
    setField_ = _Fields.FOLLOWEE_STATUS;
    value_ = java.util.Objects.requireNonNull(value,"_Fields.FOLLOWEE_STATUS");
  }

  public boolean isSetMention() {
    return setField_ == _Fields.MENTION;
  }


  public boolean isSetFollow() {
    return setField_ == _Fields.FOLLOW;
  }


  public boolean isSetFollowRequest() {
    return setField_ == _Fields.FOLLOW_REQUEST;
  }


  public boolean isSetFavorite() {
    return setField_ == _Fields.FAVORITE;
  }


  public boolean isSetBoost() {
    return setField_ == _Fields.BOOST;
  }


  public boolean isSetPollComplete() {
    return setField_ == _Fields.POLL_COMPLETE;
  }


  public boolean isSetBoostedUpdate() {
    return setField_ == _Fields.BOOSTED_UPDATE;
  }


  public boolean isSetFolloweeStatus() {
    return setField_ == _Fields.FOLLOWEE_STATUS;
  }


  public boolean equals(java.lang.Object other) {
    if (other instanceof NotificationContent) {
      return equals((NotificationContent)other);
    } else {
      return false;
    }
  }

  public boolean equals(NotificationContent other) {
    return other != null && getSetField() == other.getSetField() && getFieldValue().equals(other.getFieldValue());
  }

  @Override
  public int compareTo(NotificationContent other) {
    int lastComparison = org.apache.thrift.TBaseHelper.compareTo(getSetField(), other.getSetField());
    if (lastComparison == 0) {
      return org.apache.thrift.TBaseHelper.compareTo(getFieldValue(), other.getFieldValue());
    }
    return lastComparison;
  }


  @Override
  public int hashCode() {
    java.util.List<java.lang.Object> list = new java.util.ArrayList<java.lang.Object>();
    list.add(this.getClass().getName());
    org.apache.thrift.TFieldIdEnum setField = getSetField();
    if (setField != null) {
      list.add(setField.getThriftFieldId());
      java.lang.Object value = getFieldValue();
      if (value instanceof org.apache.thrift.TEnum) {
        list.add(((org.apache.thrift.TEnum)getFieldValue()).getValue());
      } else {
        list.add(value);
      }
    }
    return list.hashCode();
  }
  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }


  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }


}
