/**
 * Autogenerated by Thrift Compiler (0.17.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.rpl.mastodon.data;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
public class ItemStats implements org.apache.thrift.TBase<ItemStats, ItemStats._Fields>, java.io.Serializable, Cloneable, Comparable<ItemStats> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ItemStats");

  private static final org.apache.thrift.protocol.TField DAY_BUCKETS_FIELD_DESC = new org.apache.thrift.protocol.TField("dayBuckets", org.apache.thrift.protocol.TType.MAP, (short)1);
  private static final org.apache.thrift.protocol.TField STATUS_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("statusCount", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField LATEST_STATUS_MILLIS_FIELD_DESC = new org.apache.thrift.protocol.TField("latestStatusMillis", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField IS_REVIEWED_FIELD_DESC = new org.apache.thrift.protocol.TField("isReviewed", org.apache.thrift.protocol.TType.BOOL, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ItemStatsStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ItemStatsTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Long,DayBucket> dayBuckets; // required
  public long statusCount; // required
  public long latestStatusMillis; // required
  public boolean isReviewed; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    DAY_BUCKETS((short)1, "dayBuckets"),
    STATUS_COUNT((short)2, "statusCount"),
    LATEST_STATUS_MILLIS((short)3, "latestStatusMillis"),
    IS_REVIEWED((short)4, "isReviewed");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // DAY_BUCKETS
          return DAY_BUCKETS;
        case 2: // STATUS_COUNT
          return STATUS_COUNT;
        case 3: // LATEST_STATUS_MILLIS
          return LATEST_STATUS_MILLIS;
        case 4: // IS_REVIEWED
          return IS_REVIEWED;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __STATUSCOUNT_ISSET_ID = 0;
  private static final int __LATESTSTATUSMILLIS_ISSET_ID = 1;
  private static final int __ISREVIEWED_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.DAY_BUCKETS, new org.apache.thrift.meta_data.FieldMetaData("dayBuckets", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64), 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DayBucket.class))));
    tmpMap.put(_Fields.STATUS_COUNT, new org.apache.thrift.meta_data.FieldMetaData("statusCount", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LATEST_STATUS_MILLIS, new org.apache.thrift.meta_data.FieldMetaData("latestStatusMillis", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields.IS_REVIEWED, new org.apache.thrift.meta_data.FieldMetaData("isReviewed", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ItemStats.class, metaDataMap);
  }

  public ItemStats() {
  }

  public ItemStats(
    java.util.Map<java.lang.Long,DayBucket> dayBuckets,
    long statusCount,
    long latestStatusMillis,
    boolean isReviewed)
  {
    this();
    this.dayBuckets = dayBuckets;
    this.statusCount = statusCount;
    setStatusCountIsSet(true);
    this.latestStatusMillis = latestStatusMillis;
    setLatestStatusMillisIsSet(true);
    this.isReviewed = isReviewed;
    setIsReviewedIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ItemStats(ItemStats other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetDayBuckets()) {
      java.util.Map<java.lang.Long,DayBucket> __this__dayBuckets = new java.util.HashMap<java.lang.Long,DayBucket>(other.dayBuckets.size());
      for (java.util.Map.Entry<java.lang.Long, DayBucket> other_element : other.dayBuckets.entrySet()) {

        java.lang.Long other_element_key = other_element.getKey();
        DayBucket other_element_value = other_element.getValue();

        java.lang.Long __this__dayBuckets_copy_key = other_element_key;

        DayBucket __this__dayBuckets_copy_value = new DayBucket(other_element_value);

        __this__dayBuckets.put(__this__dayBuckets_copy_key, __this__dayBuckets_copy_value);
      }
      this.dayBuckets = __this__dayBuckets;
    }
    this.statusCount = other.statusCount;
    this.latestStatusMillis = other.latestStatusMillis;
    this.isReviewed = other.isReviewed;
  }

  @Override
  public ItemStats deepCopy() {
    return new ItemStats(this);
  }

  @Override
  public void clear() {
    this.dayBuckets = null;
    setStatusCountIsSet(false);
    this.statusCount = 0;
    setLatestStatusMillisIsSet(false);
    this.latestStatusMillis = 0;
    setIsReviewedIsSet(false);
    this.isReviewed = false;
  }

  public int getDayBucketsSize() {
    return (this.dayBuckets == null) ? 0 : this.dayBuckets.size();
  }

  public void putToDayBuckets(long key, DayBucket val) {
    if (this.dayBuckets == null) {
      this.dayBuckets = new java.util.HashMap<java.lang.Long,DayBucket>();
    }
    this.dayBuckets.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.Long,DayBucket> getDayBuckets() {
    return this.dayBuckets;
  }

  public ItemStats setDayBuckets(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Long,DayBucket> dayBuckets) {
    this.dayBuckets = dayBuckets;
    return this;
  }

  public void unsetDayBuckets() {
    this.dayBuckets = null;
  }

  /** Returns true if field dayBuckets is set (has been assigned a value) and false otherwise */
  public boolean isSetDayBuckets() {
    return this.dayBuckets != null;
  }

  public void setDayBucketsIsSet(boolean value) {
    if (!value) {
      this.dayBuckets = null;
    }
  }

  public long getStatusCount() {
    return this.statusCount;
  }

  public ItemStats setStatusCount(long statusCount) {
    this.statusCount = statusCount;
    setStatusCountIsSet(true);
    return this;
  }

  public void unsetStatusCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUSCOUNT_ISSET_ID);
  }

  /** Returns true if field statusCount is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUSCOUNT_ISSET_ID);
  }

  public void setStatusCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUSCOUNT_ISSET_ID, value);
  }

  public long getLatestStatusMillis() {
    return this.latestStatusMillis;
  }

  public ItemStats setLatestStatusMillis(long latestStatusMillis) {
    this.latestStatusMillis = latestStatusMillis;
    setLatestStatusMillisIsSet(true);
    return this;
  }

  public void unsetLatestStatusMillis() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LATESTSTATUSMILLIS_ISSET_ID);
  }

  /** Returns true if field latestStatusMillis is set (has been assigned a value) and false otherwise */
  public boolean isSetLatestStatusMillis() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LATESTSTATUSMILLIS_ISSET_ID);
  }

  public void setLatestStatusMillisIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LATESTSTATUSMILLIS_ISSET_ID, value);
  }

  public boolean isIsReviewed() {
    return this.isReviewed;
  }

  public ItemStats setIsReviewed(boolean isReviewed) {
    this.isReviewed = isReviewed;
    setIsReviewedIsSet(true);
    return this;
  }

  public void unsetIsReviewed() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISREVIEWED_ISSET_ID);
  }

  /** Returns true if field isReviewed is set (has been assigned a value) and false otherwise */
  public boolean isSetIsReviewed() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISREVIEWED_ISSET_ID);
  }

  public void setIsReviewedIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISREVIEWED_ISSET_ID, value);
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case DAY_BUCKETS:
      if (value == null) {
        unsetDayBuckets();
      } else {
        setDayBuckets((java.util.Map<java.lang.Long,DayBucket>)value);
      }
      break;

    case STATUS_COUNT:
      if (value == null) {
        unsetStatusCount();
      } else {
        setStatusCount((java.lang.Long)value);
      }
      break;

    case LATEST_STATUS_MILLIS:
      if (value == null) {
        unsetLatestStatusMillis();
      } else {
        setLatestStatusMillis((java.lang.Long)value);
      }
      break;

    case IS_REVIEWED:
      if (value == null) {
        unsetIsReviewed();
      } else {
        setIsReviewed((java.lang.Boolean)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case DAY_BUCKETS:
      return getDayBuckets();

    case STATUS_COUNT:
      return getStatusCount();

    case LATEST_STATUS_MILLIS:
      return getLatestStatusMillis();

    case IS_REVIEWED:
      return isIsReviewed();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case DAY_BUCKETS:
      return isSetDayBuckets();
    case STATUS_COUNT:
      return isSetStatusCount();
    case LATEST_STATUS_MILLIS:
      return isSetLatestStatusMillis();
    case IS_REVIEWED:
      return isSetIsReviewed();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof ItemStats)
      return this.equals((ItemStats)that);
    return false;
  }

  public boolean equals(ItemStats that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_dayBuckets = true && this.isSetDayBuckets();
    boolean that_present_dayBuckets = true && that.isSetDayBuckets();
    if (this_present_dayBuckets || that_present_dayBuckets) {
      if (!(this_present_dayBuckets && that_present_dayBuckets))
        return false;
      if (!this.dayBuckets.equals(that.dayBuckets))
        return false;
    }

    boolean this_present_statusCount = true;
    boolean that_present_statusCount = true;
    if (this_present_statusCount || that_present_statusCount) {
      if (!(this_present_statusCount && that_present_statusCount))
        return false;
      if (this.statusCount != that.statusCount)
        return false;
    }

    boolean this_present_latestStatusMillis = true;
    boolean that_present_latestStatusMillis = true;
    if (this_present_latestStatusMillis || that_present_latestStatusMillis) {
      if (!(this_present_latestStatusMillis && that_present_latestStatusMillis))
        return false;
      if (this.latestStatusMillis != that.latestStatusMillis)
        return false;
    }

    boolean this_present_isReviewed = true;
    boolean that_present_isReviewed = true;
    if (this_present_isReviewed || that_present_isReviewed) {
      if (!(this_present_isReviewed && that_present_isReviewed))
        return false;
      if (this.isReviewed != that.isReviewed)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetDayBuckets()) ? 131071 : 524287);
    if (isSetDayBuckets())
      hashCode = hashCode * 8191 + dayBuckets.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(statusCount);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(latestStatusMillis);

    hashCode = hashCode * 8191 + ((isReviewed) ? 131071 : 524287);

    return hashCode;
  }

  @Override
  public int compareTo(ItemStats other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetDayBuckets(), other.isSetDayBuckets());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDayBuckets()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dayBuckets, other.dayBuckets);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetStatusCount(), other.isSetStatusCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusCount, other.statusCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetLatestStatusMillis(), other.isSetLatestStatusMillis());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLatestStatusMillis()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.latestStatusMillis, other.latestStatusMillis);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetIsReviewed(), other.isSetIsReviewed());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsReviewed()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isReviewed, other.isReviewed);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ItemStats(");
    boolean first = true;

    sb.append("dayBuckets:");
    if (this.dayBuckets == null) {
      sb.append("null");
    } else {
      sb.append(this.dayBuckets);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("statusCount:");
    sb.append(this.statusCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("latestStatusMillis:");
    sb.append(this.latestStatusMillis);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isReviewed:");
    sb.append(this.isReviewed);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (dayBuckets == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'dayBuckets' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'statusCount' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'latestStatusMillis' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'isReviewed' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ItemStatsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public ItemStatsStandardScheme getScheme() {
      return new ItemStatsStandardScheme();
    }
  }

  private static class ItemStatsStandardScheme extends org.apache.thrift.scheme.StandardScheme<ItemStats> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, ItemStats struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // DAY_BUCKETS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map254 = iprot.readMapBegin();
                struct.dayBuckets = new java.util.HashMap<java.lang.Long,DayBucket>(2*_map254.size);
                long _key255;
                @org.apache.thrift.annotation.Nullable DayBucket _val256;
                for (int _i257 = 0; _i257 < _map254.size; ++_i257)
                {
                  _key255 = iprot.readI64();
                  _val256 = new DayBucket();
                  _val256.read(iprot);
                  struct.dayBuckets.put(_key255, _val256);
                }
                iprot.readMapEnd();
              }
              struct.setDayBucketsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STATUS_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.statusCount = iprot.readI64();
              struct.setStatusCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LATEST_STATUS_MILLIS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.latestStatusMillis = iprot.readI64();
              struct.setLatestStatusMillisIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // IS_REVIEWED
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isReviewed = iprot.readBool();
              struct.setIsReviewedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetStatusCount()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'statusCount' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetLatestStatusMillis()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'latestStatusMillis' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetIsReviewed()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'isReviewed' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, ItemStats struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.dayBuckets != null) {
        oprot.writeFieldBegin(DAY_BUCKETS_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I64, org.apache.thrift.protocol.TType.STRUCT, struct.dayBuckets.size()));
          for (java.util.Map.Entry<java.lang.Long, DayBucket> _iter258 : struct.dayBuckets.entrySet())
          {
            oprot.writeI64(_iter258.getKey());
            _iter258.getValue().write(oprot);
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STATUS_COUNT_FIELD_DESC);
      oprot.writeI64(struct.statusCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LATEST_STATUS_MILLIS_FIELD_DESC);
      oprot.writeI64(struct.latestStatusMillis);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_REVIEWED_FIELD_DESC);
      oprot.writeBool(struct.isReviewed);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ItemStatsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public ItemStatsTupleScheme getScheme() {
      return new ItemStatsTupleScheme();
    }
  }

  private static class ItemStatsTupleScheme extends org.apache.thrift.scheme.TupleScheme<ItemStats> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ItemStats struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      {
        oprot.writeI32(struct.dayBuckets.size());
        for (java.util.Map.Entry<java.lang.Long, DayBucket> _iter259 : struct.dayBuckets.entrySet())
        {
          oprot.writeI64(_iter259.getKey());
          _iter259.getValue().write(oprot);
        }
      }
      oprot.writeI64(struct.statusCount);
      oprot.writeI64(struct.latestStatusMillis);
      oprot.writeBool(struct.isReviewed);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ItemStats struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      {
        org.apache.thrift.protocol.TMap _map260 = iprot.readMapBegin(org.apache.thrift.protocol.TType.I64, org.apache.thrift.protocol.TType.STRUCT); 
        struct.dayBuckets = new java.util.HashMap<java.lang.Long,DayBucket>(2*_map260.size);
        long _key261;
        @org.apache.thrift.annotation.Nullable DayBucket _val262;
        for (int _i263 = 0; _i263 < _map260.size; ++_i263)
        {
          _key261 = iprot.readI64();
          _val262 = new DayBucket();
          _val262.read(iprot);
          struct.dayBuckets.put(_key261, _val262);
        }
      }
      struct.setDayBucketsIsSet(true);
      struct.statusCount = iprot.readI64();
      struct.setStatusCountIsSet(true);
      struct.latestStatusMillis = iprot.readI64();
      struct.setLatestStatusMillisIsSet(true);
      struct.isReviewed = iprot.readBool();
      struct.setIsReviewedIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

